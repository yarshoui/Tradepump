name: Tradepump

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  publish_types:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Setup npm registry
      run: |
        echo "//gitlab.com/api/v4/projects/26965542/packages/npm/:_authToken=${{ secrets.GITLAB_TOKEN }}" >> .npmrc
        echo "//gitlab.com/api/v4/packages/npm/:_authToken=${{ secrets.GITLAB_TOKEN }}" >> .npmrc
        cat .npmrc
      working-directory: services/types
    - name: Install packages
      run: npm ci
      working-directory: services/types
    - name: Build types
      run: npm run build
      working-directory: services/types
    - name: Publish
      run: npm publish
      working-directory: services/types

  build:
    needs: publish_types
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app:
        - client
        # - server - comment out for now, as no need to build anything
        - harvester
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - run: npm ci
      working-directory: services/${{ matrix.app }}
    - run: npm run build
      working-directory: services/${{ matrix.app }}
    - uses: actions/cache@v2
      id: restore-build
      with:
        path: ./services/${{ matrix.app }}/build
        key: ${{ github.sha }}

  # Run tests.
  test_docker:
    needs: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        app:
        - client
        - server
        - harvester

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./services/${{ matrix.app }}/build
          key: ${{ github.sha }}
      - name: Run tests
        run: docker build --file Dockerfile .
        working-directory: services/${{ matrix.app }}

  # Push image
  push_docker:
    needs: test_docker

    runs-on: ubuntu-latest
    # Run only on master
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        app:
        - client
        - server
        - harvester

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./services/${{ matrix.app }}/build
          key: ${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v1 
        with:
          registry: registry.gitlab.com
          username: tradepump_ci
          password: ${{ secrets.GITLAB_TOKEN }}

      - name: Prepare tag
        run: |
          IMAGE_ID=registry.gitlab.com/tradepump/${{ matrix.app }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo "image_tag=$IMAGE_ID:$VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: services/${{ matrix.app }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.image_tag }}
          push: true
