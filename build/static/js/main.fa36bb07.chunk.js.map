{"version":3,"sources":["logic/krakenSocket.ts","components/logic/Clock.tsx","components/Header.tsx","components/TopLogoPanel.tsx","components/Footer.tsx","components/TopAd.tsx","pages/Terms.tsx","components/TradingOption.tsx","components/OrderMonitorMenu.tsx","components/BitfinexOrdersTable.tsx","components/KrakenOrdersTable.tsx","components/BinanceOrdersTable.tsx","components/BitstampOrdersTable.tsx","components/OrdersMonitorTables.tsx","logic/pairsConfig.ts","logic/appStoreKraken.ts","logic/bitfinexRest.ts","logic/appStoreBitfinex.ts","logic/binanceRest.ts","logic/appStoreBinance.ts","logic/bitstampRest.ts","logic/appStoreBitstamp.ts","logic/appStore.ts","components/RightAd.tsx","components/OrdersMonitor.tsx","pages/Privacy.tsx","pages/About.tsx","components/intro/config.ts","components/Monitor.tsx","index.tsx"],"names":["intervalId","Clock","this","setState","time","Date","tick","setInterval","state","toLocaleTimeString","React","Component","Header","props","console","log","currMonitor","className","to","id","TopLogoPanel","href","src","alt","Footer","TopAd","useStyles","makeStyles","theme","root","flexGrow","position","minWidth","overflowX","fontFamily","letterSpacing","textTransform","fontSize","fontWeight","marginLeft","paper","padding","spacing","textAlign","color","palette","text","secondary","contentHolder","display","flexDirection","flexWrap","tableHolder","asideHolder","width","paddingLeft","topHolder","logoHolder","alignItems","asideTopHolder","Terms","classes","Helmet","charSet","name","content","rel","type","TradingOption","value","OrderMonitorMenu","observer","store","style","title","currencyPair","onChange","event","target","setCurrencyPair","label","selected","placeholder","setOrderQuantity","setOrderQuantityHighlight","table","head","caption","margin","base","backgroundColor","highlight","ccyPriceToPrecise","ccyQtyToPrecise","BitfinexOrdersTable","storeBitfinex","askBidTable","asks","bids","currentCcyPair","currentBitfinexPair","formatPrice","prc","indexOf","slice","formatQty","qty","align","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","length","map","ask","rowClassName","shouldHighlight","key","scope","colSpan","bid","KrakenOrdersTable","currentKrakenPair","captionText","BinanceOrdersTable","storeBinance","currentBinancePair","BitstampOrdersTable","storeBitstamp","currentBitstampPair","OrdersMonitorTables","Grid","container","justify","item","xs","tables","kraken","bitfinex","binance","bitstamp","PAIRS","bittrex","krakenData","socket","undefined","activePayload","restoreSocket","Promise","resolve","WebSocket","onclose","onopen","clearInterval","getKrakenSocket","then","send","error","sendData","onerror","message","onmessage","msg","dataHandler","subscribeToKrakenCurrencyPair","inputPair","socketPromise","payload","pair","subscription","depth","JSON","stringify","getSubscribePayload","AppStoreKraken","orderQuantity","orderQuantityHighlight","defaultQuantityHighlight","inputValue","parseFloat","as","bs","debounce","input","quantity","isNaN","warn","quantityHighlight","setCurrentKrakenPair","resetData","setKrakenData","newData","parse","data","channelID","connectionID","Array","isArray","b","a","count","reaction","fireImmediately","filter","v","decorate","observable","action","computed","appStoreKraken","pollingIntervalBitfinex","bitfinexOrdersData","Response","getBitfinexOrdersData","urlBitfinex","fetch","responseBitfinex","json","bitData","doRequestBitfinex","loadJson","AppStoreBitfinex","bitfinexData","setCurrentBitfinexPair","setBitfinexData","amount","appStoreBitfinex","setBitfinexDataHandler","binanceOrdersDataArr","pollingInterval","binanceOrdersData","getBinanceOrdersData","urlBinance","responseBinance","binData","doRequest","AppStoreBinance","binanceData","setCurrentBinancePair","setBinanceData","appStoreBinance","setBinanceDataHandler","bitstampOrdersData","getBitstampOrdersData","urlBitstamp","responseBitstamp","bitstampData","AppStoreBitstamp","setCurrentBitstampPair","setBitstampData","appStoreBitstamp","setBitstampDataHandler","AppStore","appStore","RightAd","visibility","borderColor","ReactGA","initialize","OrdersMonitor","useEffect","pageview","window","location","pathname","search","Privacy","aboutPageLinks","textDecoration","About","steps","intro","element","start","localStorage","getItem","setItem","IntroJs","setOptions","cookiesNitification","introIcon","right","bottom","Monitor","path","onClick","removeItem","data-bn-type","themeConstructor","createMuiTheme","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.fa36bb07.chunk.js","sourcesContent":["import { PAIRS, SelectorOptions } from 'src/logic/pairsConfig';\r\n\r\ninterface KrakenData {\r\n  socket: WebSocket | undefined;\r\n  activePayload: string | undefined;\r\n  dataHandler?: (msg: any) => void;\r\n}\r\n\r\nconst krakenData: KrakenData = {\r\n  socket: undefined,\r\n  activePayload: undefined,\r\n};\r\n\r\nlet intervalId: NodeJS.Timeout;\r\n\r\nconst sendData = () => {\r\n  console.log('sendData');\r\n  intervalId = setInterval(() => {\r\n    console.log('sendData setInterval', krakenData);\r\n    if (!krakenData.activePayload) {\r\n      return;\r\n    }\r\n\r\n    const socketPromise = getKrakenSocket();\r\n    socketPromise.then((socket) => {\r\n      if (!krakenData.activePayload) {\r\n        return;\r\n      }\r\n\r\n      //console.log('here', krakenData);\r\n      try {\r\n        socket.send(krakenData.activePayload);\r\n      } catch (error) {\r\n        console.error('Kraken socket error :' + error);\r\n      }\r\n    });\r\n  }, 4000);\r\n\r\n  if (!krakenData.activePayload) {\r\n    return;\r\n  }\r\n\r\n  krakenData.socket?.send(krakenData.activePayload);\r\n};\r\n\r\nexport function restoreSocket() {\r\n  return new Promise<WebSocket>((resolve) => {\r\n    krakenData.socket = new WebSocket('wss://ws.kraken.com');\r\n\r\n    krakenData.socket.onclose = () => {\r\n      restoreSocket();\r\n      console.log('WebSocket is closed now.');\r\n    };\r\n\r\n    krakenData.socket.onopen = () => {\r\n      console.log('[open] Connection established 1');\r\n      intervalId && clearInterval(intervalId);\r\n      sendData();\r\n      resolve(krakenData.socket as WebSocket);\r\n      // resolve(krakenData.socket);\r\n    };\r\n\r\n    krakenData.socket.onerror = (error: any) => {\r\n      console.log(`[error] ${error.message}`);\r\n    };\r\n\r\n    krakenData.socket.onmessage = function (msg) {\r\n      krakenData.dataHandler && krakenData.dataHandler(msg);\r\n    };\r\n  });\r\n}\r\n\r\nexport const getKrakenSocket = (): Promise<WebSocket> => {\r\n  if (!krakenData.socket) {\r\n    return restoreSocket();\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    // resolve(krakenData.socket);\r\n    resolve(krakenData.socket as WebSocket);\r\n  });\r\n};\r\n\r\nconst getSubscribePayload = (inputPair: SelectorOptions) => {\r\n  const payload = {\r\n    event: 'subscribe',\r\n    pair: [PAIRS[inputPair].kraken],\r\n    // pair: [ inputPair, ],\r\n    subscription: {\r\n      depth: 1000,\r\n      name: 'book',\r\n    },\r\n  };\r\n\r\n  return JSON.stringify(payload);\r\n};\r\n\r\nexport const setKrakenDataHandler = (dataHandler: (msg: any) => void) => {\r\n  krakenData.dataHandler = dataHandler;\r\n};\r\n\r\n// export const setPayloadForKrakenCurrencyPair = (inputPair: string) => {\r\n//   const payload = getSubscribePayload(inputPair);\r\n//   krakenData.activePayload = payload;\r\n// };\r\n\r\nexport const subscribeToKrakenCurrencyPair = (inputPair: SelectorOptions) => {\r\n  const socketPromise = getKrakenSocket();\r\n  const payload = getSubscribePayload(inputPair);\r\n  krakenData.activePayload = payload;\r\n  socketPromise.then((socket) => {\r\n    socket.send(payload);\r\n  });\r\n};\r\n","import React from 'react';\r\n//import 'src/intro/intro.min.js';\r\n// import {intro} from 'src/intro/introconfig.js';\r\n// import 'src/intro/intro.css';\r\n// import introJs from 'src/intro/intro.js';\r\n\r\n/*export function startTime() {\r\n    var dt = new Date();\r\n    document.getElementById(\"datetime\").innerHTML = ((\"0\"+dt.getDate()).slice(-2)) +\".\"+ ((\"0\"+(dt.getMonth()+1)).slice(-2)) +\".\"+ (dt.getFullYear()) +\" \"+ ((\"0\"+dt.getHours()).slice(-2)) +\":\"+ ((\"0\"+dt.getMinutes()).slice(-2))+\":\"+ ((\"0\"+dt.getSeconds()).slice(-2));\r\n    var t = setTimeout(startTime, 500);\r\n    }\r\n    */\r\n\r\n// the clock's state has one field: The current time, based upon the\r\n// JavaScript class Date\r\ntype ClockState = {\r\n  time: Date;\r\n};\r\n\r\n// Clock has no properties, but the current state is of type ClockState\r\n// The generic parameters in the Component typing allow to pass props\r\n// and state. Since we don't have props, we pass an empty object.\r\nexport class Clock extends React.Component<{}, ClockState> {\r\n  // The tick function sets the current state. TypeScript will let us know\r\n  // which ones we are allowed to set.\r\n  tick() {\r\n    this.setState({\r\n      time: new Date(),\r\n    });\r\n  }\r\n\r\n  // Before the component mounts, we initialise our state\r\n  componentWillMount() {\r\n    this.tick();\r\n  }\r\n\r\n  // After the component did mount, we set the state each second.\r\n  componentDidMount() {\r\n    // intro.start();\r\n    setInterval(() => this.tick(), 1000);\r\n    \r\n  }\r\n\r\n  // render will know everything!\r\n  render() {\r\n    return this.state.time.toLocaleTimeString();\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\nimport { Clock } from 'src/components/logic/Clock';\r\nimport { startTourAgain } from 'src/components/intro/config';\r\n\r\nexport const Header = (props: any) => {\r\n  console.log('currentMOnitor', props.currMonitor);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav\">\r\n      {/* <li>\r\n          <a className=\"active\" href=\"/\">\r\n            Orders Monitor\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"disabled\" href=\"/#dumpLink\">\r\n            Market Monitor\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"disabled\" href=\"/history\">\r\n            Trade History\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"disabled\" href=\"/#dumpLink\">\r\n            Market Statistics\r\n          </a>\r\n        </li> */}\r\n\r\n\r\n\r\n        <li>\r\n          <NavLink to=\"/monitor\">\r\n            Orders Monitor\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">\r\n            About\r\n          </NavLink>\r\n        </li>\r\n         {/* <li>\r\n          <NavLink className=\"nonActive\" to=\"/monitor\" onClick={() => startTourAgain()}>\r\n            Intro tour\r\n          </NavLink>\r\n        </li> */}\r\n        {/* <li>\r\n          <NavLink className=\"disabled\" to=\"/statistics\">\r\n            Market Statistics\r\n          </NavLink>\r\n        </li>  */}\r\n\r\n        <li>\r\n          <span className=\"clock\">\r\n            Time:{' '}\r\n            <span id=\"datetime\">\r\n              <Clock />\r\n            </span>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './../../src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\n\r\nexport const TopLogoPanel = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"top\">\r\n        <a className=\"logo\" href=\"http://tradepump.com\">\r\n         <img src=\"./Icon3.jpg\" alt=\"tradepump-logo\"></img>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport 'src/css/index.css';\r\n\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"bottom-nav\">\r\n        <li>\r\n          <a className=\"bottom-menu-button\" href=\"/terms\">\r\n            Terms and conditions\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"bottom-menu-button\" href=\"/privacy\">\r\n            Privacy Policy\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"bottom-menu-button\" href=\"/about\">\r\n            About\r\n          </a>\r\n        </li>\r\n        \r\n        {/* <li>\r\n          <a className=\"bottom-menu-button\" href=\"/support\">\r\n            Support\r\n          </a>\r\n        </li> */}\r\n      </ul>\r\n      <p>Send your comments and suggestions to <a className=\"bottom-menu-button\" href=\"mailto:support@tradepump.com\">Support</a></p>\r\n      <p>Copyright © 2020 TradePump.com</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './../../src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\n\r\nexport const TopAd = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"topadv\">\r\n        {/* <p>Please disable your ad-blocker (adv 728*90 align=right)</p>\r\n        <p>You may not like this ad, but it supports the developer and keeps this site free.</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport 'src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { RadioButtonCheckedTwoTone } from '@material-ui/icons';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1600px',\r\n    overflowX: 'auto',\r\n    fontFamily: 'sans-serif',\r\n    letterSpacing: 0,\r\n    textTransform: 'none',\r\n    fontSize: '14px',\r\n    fontWeight: 400,\r\n    marginLeft: '10px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n}));\r\n\r\nexport const Terms = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet>\r\n          <meta charSet=\"utf-8\" />          \r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\r\n          <meta name=\"theme-color\" content=\"#000000\" />\r\n          <meta name=\"application-name\" content=\"TradePump\" />\r\n          <meta name=\"description\" content=\"Tradepump is not just a Bitcoin and Cryptocurrency Free Aggregator. Come see why our servise is the best place to know crypto exchanges orders books and trades history.\" />\r\n          <meta name=\"robots\" content=\"index,follow\" />\r\n          <meta name=\"googlebot\" content=\"index,follow\" />\r\n          <meta name=\"google\" content=\"notranslate\" />\r\n          <meta name=\"generator\" content=\"ReactJS\"></meta>\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\r\n          <link rel=\"stylesheet\" href=\"style.css\" />\r\n          <title>Bitcoin & Cryptocurrency Free Aggregator | TradePump.com</title>\r\n        </Helmet>\r\n      \r\n       <h2>TradePump Terms of Service</h2>\r\n        <p>\r\n          <em>Last Updated: December 4, 2020</em>\r\n        </p>\r\n        <p>Agreement to use the services of TradePump.com.          \r\n        This agreement hereinafter referred to as the \"Agreement\" is concluded between the TradePump.com service, hereinafter referred to as the \"Site\" \r\n        and the user of the services, hereinafter referred to as the \"Client\" or \"User\", determining the conditions for purchasing services through the Site.\r\n        </p>\r\n        <p>By accessing the website at <a href=\"http://tradepump.com\">http://tradepump.com</a>, you are agreeing to be bound by these terms of service, all applicable laws and regulations, and agree that you are responsible for compliance with any applicable local laws. If you do not agree with any of these terms, you are prohibited from using or accessing this site. The materials contained in this website are protected by applicable copyright and trademark law.</p>\r\n        <h3>1. General Obligations</h3>\r\n        <ol type=\"a\">\r\n          <li> This Agreement is concluded between the Client and the Site at the time of opening the site. \r\n            By continuing to use the site the Client confirms his agreement with the conditions established by this Agreement.</li>\r\n          <li> The client can be any individual or entity who is able to accept and pay for the service ordered by him in the manner and on the terms established by this Agreement.</li>\r\n          <li> The site administration reserves the right at any time to change, add or delete clauses of this Agreement without notifying the User.</li>\r\n          <li> Continued use of the Site by the User means acceptance of the Agreement and changes made to this Agreement.</li>\r\n        </ol>\r\n        <h3>2. Disclaimer</h3>\r\n        <ol type=\"a\">\r\n          <li>The materials on TradePump's website are provided on an 'as is' basis. TradePump makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including, without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</li>\r\n          <li>Further, TradePump does not warrant or make any representations concerning the accuracy, likely results, or reliability of the use of the materials on its website or otherwise relating to such materials or on any sites linked to this site.</li>\r\n        </ol>\r\n\r\n        <h3>3. Rights and obligations of the parties</h3>\r\n        <p>The site administration has the right:</p>\r\n        <ol type=\"a\">\r\n        <li> Change the rules for using the Site, as well as change the content of this Site. Changes come into force from the moment the new version of the Agreement is published on the Site.</li>\r\n        <li> Restrict access to the Site in case the User violates the terms of this Agreement.</li>\r\n        </ol>\r\n        <p>The User hasn't right:</p>\r\n        <ol type=\"a\">\r\n        <li> Use any devices, programs, procedures, algorithms and methods, automatic devices or equivalent manual processes to access, acquire, copy or track the content of the Site.</li>\r\n        <li> By any means bypass the navigation structure of the Site to obtain or attempt to obtain any information, documents or materials by any means that are not specifically provided by the services of this Site.</li>\r\n        <li> Violate the security system or authentication on the Site or on any network related to the Site.</li>\r\n        </ol>\r\n\r\n\r\n        <h3>4. Risk Disclosure and Responsibility</h3>\r\n        <ol type=\"a\">\r\n        <li> You acknowledge and agree that you shall access and use the Tradepump.com servise at your own risk. The risk of loss in trading Digital Asset pairs and Digital Asset and Legal Tender pairs can be substantial. \r\n          You should, therefore, carefully consider whether such trading is suitable for you in light of your circumstances and financial resources.</li>\r\n        <li> The site is not responsible for any damage (including non-pecuniary damage, loss of money (loss of profit) resulting from the use or inability to use this site.</li>\r\n        <li> The site administration is not responsible for:</li>\r\n        <li> Delays or failures in the process of obtaining information arising from malfunctions on the part of exchanges, as well as any case of malfunctions in telecommunication, computer, electrical and other related systems.</li>\r\n        <li> Actions of transfer systems, banks, payment systems and for delays associated with their work.</li>\r\n        </ol>\r\n\r\n        <p><strong>Internet transmission risks.</strong> You acknowledge that there are risks associated with utilizing an Internet-based trading system including, but not limited to, the failure of hardware, software, and Internet connections. You acknowledge that \r\n          TradePump.com shall not be responsible for any communication failures, disruptions, errors, distortions or delays you may experience when trading via the Services, however caused.</p>\r\n        \r\n        <h3>5. ACCEPTABLE USE</h3>\r\n        <p>When accessing or using the Services, you agree that you will not violate any law, contract, intellectual property or other third-party right or commit a tort, \r\n          and that you are solely responsible for your conduct while using our Services. Without limiting the generality of the foregoing, you agree that you will not:</p>\r\n          <ul>\r\n            <li>Use our Services in any manner that could interfere with, disrupt, negatively affect or inhibit other users from fully enjoying our Services, or that could damage, disable, overburden or impair the functioning of our Services in any manner;</li>\r\n            <li>Use our Services to pay for, support or otherwise engage in any illegal gambling activities; fraud; money-laundering; or terrorist activities; or other illegal activities;</li>\r\n            <li>Use any robot, spider, crawler, scraper or other automated means or interface not provided by us to access our Services or to extract data;</li>\r\n            <li>Attempt to circumvent any content filtering techniques we employ, or attempt to access any service or area of our Services that you are not authorized to access;</li>\r\n            <li>Develop any third-party applications that interact with our Services without our prior written consent;</li>\r\n            <li>Encourage or induce any third party to engage in any of the activities prohibited under this Section.</li>\r\n          </ul>\r\n          <h3>6. Third-Party Content</h3>\r\n          <p>In using our Services, you may view content provided by third parties, including links to web pages of such parties. We do not control, endorse or adopt any Third-Party Content and shall have no responsibility for Third-Party Content, \r\n            including without limitation material that may be misleading, incomplete, erroneous, offensive, indecent or otherwise objectionable. \r\n            In addition, your business dealings or correspondence with such third parties are solely between you and the third parties. \r\n            We are not responsible or liable for any loss or damage of any sort incurred as the result of any such dealings, and you understand that your use of Third-Party Content, \r\n            and your interactions with third parties, is at your own risk.</p>\r\n            <p></p>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ninterface TradingOption {\r\n  value: string;\r\n  selected: string;\r\n  text?: string;\r\n}\r\n\r\nexport const TradingOption = ({ value, text }: TradingOption) => {\r\n  return (\r\n    <option value={value}>\r\n      {text || value}\r\n    </option>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n// import { decorate, observable } from 'mobx';\r\nimport { TradingOption } from 'src/components/TradingOption';\r\nimport { SelectorOptions } from 'src/logic/pairsConfig';\r\nimport { AppStore } from 'src/logic/appStore';\r\n\r\n// import 'src/intro/introjs.min.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n\r\n// const getSubscribePayload = (inputPair: string) => {\r\n//   const payload = {\r\n//     event: 'subscribe',\r\n//     pair: [ PAIRS[inputPair].kraken, ],\r\n//     subscription: {\r\n//       depth: 1000,\r\n//       name: 'book',\r\n//     }\r\n//   };\r\n\r\n//   return JSON.stringify(payload);\r\n// };\r\n\r\ninterface OrderMonitorMenuProps {\r\n  store: AppStore;\r\n}\r\n\r\nexport const OrderMonitorMenu = observer(\r\n  ({\r\n    store,\r\n  }: OrderMonitorMenuProps) => {\r\n    return (\r\n      <div className=\"top-menu\">\r\n        {' '}\r\n        <span style={{ marginLeft: '10px' }}> Trading Pair </span>\r\n        <select\r\n          name=\"pair\"\r\n          id=\"pairfilter\"\r\n          title='Select a trading pair'\r\n          value={store.currencyPair}\r\n          onChange={(event) => {\r\n            const value = event.target.value as SelectorOptions;\r\n            store.setCurrencyPair(value);\r\n          }}\r\n        >\r\n          <optgroup label=\"Bitcoin\">\r\n            <TradingOption value=\"BTC/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"BTC/EUR\" selected={store.currencyPair} />            \r\n            <TradingOption value=\"BTC/USDT\" selected={store.currencyPair} />\r\n          </optgroup>\r\n          <optgroup label=\"Ethereum\">\r\n            <TradingOption value=\"ETH/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ETH/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ETH/USDT\" selected={store.currencyPair} />        \r\n          </optgroup>\r\n          <optgroup label=\"XRP\">\r\n            <TradingOption value=\"XRP/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XRP/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XRP/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XRP/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XRP/USDT\" selected={store.currencyPair} />            \r\n          </optgroup>\r\n          <optgroup label=\"Cardano\">\r\n            <TradingOption value=\"ADA/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ADA/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ADA/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ADA/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"ADA/USDT\" selected={store.currencyPair} />               \r\n          </optgroup>\r\n          <optgroup label=\"Bitcoin Cash\">\r\n            <TradingOption value=\"BCH/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"BCH/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"BCH/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"BCH/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"BCH/USDT\" selected={store.currencyPair} />             \r\n          </optgroup>\r\n          <optgroup label=\"Litecoin\">\r\n            <TradingOption value=\"LTC/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LTC/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LTC/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LTC/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LTC/USDT\" selected={store.currencyPair} />              \r\n          </optgroup>\r\n          <optgroup label=\"EOS\">\r\n            <TradingOption value=\"EOS/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"EOS/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"EOS/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"EOS/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"EOS/USDT\" selected={store.currencyPair} />            \r\n          </optgroup>\r\n          <optgroup label=\"DASH\">\r\n            <TradingOption value=\"DASH/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"DASH/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"DASH/EUR\" selected={store.currencyPair} />                        \r\n          </optgroup>\r\n          <optgroup label=\"Stellar\">\r\n            <TradingOption value=\"XLM/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XLM/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XLM/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XLM/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"XLM/USDT\" selected={store.currencyPair} />          \r\n          </optgroup>\r\n          <optgroup label=\"Chainlink\">\r\n           <TradingOption value=\"LINK/BTC\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LINK/ETH\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LINK/USD\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LINK/EUR\" selected={store.currencyPair} />\r\n            <TradingOption value=\"LINK/USDT\" selected={store.currencyPair} />  \r\n          </optgroup>\r\n        </select>\r\n        <span style={{ marginLeft: '5px' }}> Min Order Qty </span>\r\n        <input\r\n          type=\"text\"\r\n          id=\"qtyfilter\"\r\n          placeholder=\"1\"\r\n          title='Set minimum order quantity'\r\n          // value={store.orderQuantity}\r\n          onChange={(event) => {\r\n            store.setOrderQuantity(event.target.value);\r\n          }}\r\n        />\r\n        <span style={{ marginLeft: '5px' }}> Highlight Min Order Qty </span>\r\n        <input\r\n          type=\"text\"\r\n          id=\"highlightfilter\"\r\n          placeholder=\"1\"\r\n          title='Highlight Orders with Qty more than'\r\n          onChange={(event) => {\r\n            store.setOrderQuantityHighlight(event.target.value);\r\n          }}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './../../src/css/index.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import { AppStore } from 'src/logic/appStore';\r\nimport { AppStoreBitfinex } from 'src/logic/appStoreBitfinex';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    \r\n    fontSize: 14,\r\n  },\r\n  head: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  caption: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    margin: '2px',\r\n  },\r\n  base:{\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  highlight:{\r\n    backgroundColor: \"#AECCD7\",\r\n  },\r\n});\r\n\r\nconst ccyPriceToPrecise: any = {\r\n  'BTC/USD': 0,\r\n  'BTC/USDT': 0,\r\n  'BTC/EUR': 0,\r\n  'ETH/USD': 2,\r\n  'ETH/EUR': 2,\r\n  'ETH/USDT': 2,\r\n  'XRP/USD': 5,\r\n  'XRP/USDT': 5,\r\n  'XRP/BTC': 9,\r\n  'XRP/ETH': 9,\r\n  'XRP/EUR': 5,\r\n  'ADA/USD': 5,\r\n  'ADA/USDT': 5,\r\n  'ADA/BTC': 8,\r\n  'ADA/ETH': 8,\r\n  'ADA/EUR': 5,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 8,\r\n  'BCH/ETH': 8,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 8,\r\n  'LTC/ETH': 8,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 2,\r\n  'EOS/USDT': 2,\r\n  'EOS/BTC': 8,\r\n  'EOS/ETH': 8,\r\n  'EOS/EUR': 2,\r\n  'DASH/BTC': 8,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 5,\r\n  'XLM/USDT': 5,\r\n  'XLM/BTC': 8,\r\n  'XLM/ETH': 8,\r\n  'XLM/EUR': 5,\r\n  'LINK/USD': 2,\r\n  'LINK/USDT': 2,\r\n  'LINK/BTC': 8,\r\n  'LINK/ETH': 8,\r\n  'LINK/EUR': 2,\r\n};\r\nconst ccyQtyToPrecise: any = {\r\n  'BTC/USD': 2,\r\n  'BTC/USDT': 2,\r\n  'BTC/EUR': 2,\r\n  'ETH/USD': 3,\r\n  'ETH/EUR': 3,\r\n  'ETH/USDT': 3,\r\n  'XRP/USD': 0,\r\n  'XRP/USDT': 0,\r\n  'XRP/EUR': 0,\r\n  'XRP/BTC': 0,\r\n  'XRP/ETH': 0,\r\n  'ADA/USD': 0,\r\n  'ADA/USDT': 0,\r\n  'ADA/EUR': 0,\r\n  'ADA/BTC': 0,\r\n  'ADA/ETH': 0,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 2,\r\n  'BCH/ETH': 2,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 2,\r\n  'LTC/ETH': 2,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 0,\r\n  'EOS/USDT': 0,\r\n  'EOS/BTC': 0,\r\n  'EOS/ETH': 0,\r\n  'EOS/EUR': 0,\r\n  'DASH/BTC': 2,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 0,\r\n  'XLM/USDT': 0,\r\n  'XLM/EUR': 0,\r\n  'XLM/BTC': 0,\r\n  'XLM/ETH': 0,\r\n  'LINK/USD': 0,\r\n  'LINK/USDT': 0,\r\n  'LINK/BTC': 0,\r\n  'LINK/ETH': 0,\r\n  'LINK/EUR': 0,\r\n};\r\ninterface MonitorProps {\r\n  storeBitfinex: AppStoreBitfinex;\r\n}\r\nexport const BitfinexOrdersTable = observer(\r\n  ({ storeBitfinex }: MonitorProps): JSX.Element => {\r\n    // //console.log('@@@', storeBitfinex);\r\n    const { asks, bids } = storeBitfinex.askBidTable;\r\n    const currentCcyPair = storeBitfinex.currentBitfinexPair;\r\n    const classes = useStyles();\r\n\r\n    const formatPrice = (prc: any) => {\r\n      if (prc.indexOf('.') > -1) {\r\n        return prc.slice(0, prc.indexOf('.') + ccyPriceToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return prc;\r\n    };\r\n\r\n    const formatQty = (qty: any) => {\r\n      if (qty.indexOf('.') > -1) {\r\n        return qty.slice(0, qty.indexOf('.') + ccyQtyToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return qty;\r\n    };\r\n\r\n    return (\r\n      <table style={{ display: 'inline-block' }}>\r\n        <caption className={classes.caption}>Bitfinex</caption>\r\n        <tbody>\r\n          <tr>\r\n            <td align=\"center\"></td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\" aria-label=\"a dense table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ask Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {asks.length ? (\r\n                      asks.map((ask) => {\r\n                        const rowClassName = storeBitfinex.shouldHighlight(ask['amount']) ? classes.highlight : classes.base;\r\n                        return (\r\n                        <TableRow key={ask['price']} className={rowClassName}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {formatPrice(ask['price'])}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatQty(ask['amount'])}</TableCell>\r\n                        </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Bid Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {bids.length ? (\r\n                      bids.map((bid) => {\r\n                        const rowClassName = storeBitfinex.shouldHighlight(bid['amount']) ? classes.highlight : classes.base;\r\n                        return (\r\n                        <TableRow key={bid['price']} className={rowClassName}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {formatPrice(bid['price'])}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatQty(bid['amount'])}</TableCell>\r\n                        </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport 'src/css/index.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AppStoreKraken } from 'src/logic/appStoreKraken';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    \r\n    fontSize: 14,\r\n  },\r\n  head: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  caption: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    margin: '2px',\r\n  },\r\n  base:{\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  highlight:{\r\n    backgroundColor: \"#AECCD7\",\r\n  },\r\n});\r\n\r\nconst ccyPriceToPrecise: any = {\r\n  'BTC/USD': 0,\r\n  'BTC/USDT': 0,\r\n  'BTC/EUR': 0,\r\n  'ETH/USD': 2,\r\n  'ETH/EUR': 2,\r\n  'ETH/USDT': 2,\r\n  'XRP/USD': 5,\r\n  'XRP/USDT': 5,\r\n  'XRP/BTC': 9,\r\n  'XRP/ETH': 9,\r\n  'XRP/EUR': 5,\r\n  'ADA/USD': 5,\r\n  'ADA/USDT': 5,\r\n  'ADA/BTC': 8,\r\n  'ADA/ETH': 8,\r\n  'ADA/EUR': 5,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 8,\r\n  'BCH/ETH': 8,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 8,\r\n  'LTC/ETH': 8,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 2,\r\n  'EOS/USDT': 2,\r\n  'EOS/BTC': 8,\r\n  'EOS/ETH': 8,\r\n  'EOS/EUR': 2,\r\n  'DASH/BTC': 8,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 5,\r\n  'XLM/USDT': 5,\r\n  'XLM/BTC': 8,\r\n  'XLM/ETH': 8,\r\n  'XLM/EUR': 5,\r\n  'LINK/USD': 2,\r\n  'LINK/USDT': 2,\r\n  'LINK/BTC': 8,\r\n  'LINK/ETH': 8,\r\n  'LINK/EUR': 2,\r\n};\r\nconst ccyQtyToPrecise: any = {\r\n  'BTC/USD': 2,\r\n  'BTC/USDT': 2,\r\n  'BTC/EUR': 2,\r\n  'ETH/USD': 3,\r\n  'ETH/EUR': 3,\r\n  'ETH/USDT': 3,\r\n  'XRP/USD': 0,\r\n  'XRP/USDT': 0,\r\n  'XRP/EUR': 0,\r\n  'XRP/BTC': 0,\r\n  'XRP/ETH': 0,\r\n  'ADA/USD': 0,\r\n  'ADA/USDT': 0,\r\n  'ADA/EUR': 0,\r\n  'ADA/BTC': 0,\r\n  'ADA/ETH': 0,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 2,\r\n  'BCH/ETH': 2,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 2,\r\n  'LTC/ETH': 2,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 0,\r\n  'EOS/USDT': 0,\r\n  'EOS/BTC': 0,\r\n  'EOS/ETH': 0,\r\n  'EOS/EUR': 0,\r\n  'DASH/BTC': 2,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 0,\r\n  'XLM/USDT': 0,\r\n  'XLM/EUR': 0,\r\n  'XLM/BTC': 0,\r\n  'XLM/ETH': 0,\r\n  'LINK/USD': 0,\r\n  'LINK/USDT': 0,\r\n  'LINK/BTC': 0,\r\n  'LINK/ETH': 0,\r\n  'LINK/EUR': 0,\r\n};\r\n\r\ninterface MonitorProps {\r\n  store: AppStoreKraken;\r\n}\r\nexport const KrakenOrdersTable = observer(\r\n  ({ store }: MonitorProps): JSX.Element => {\r\n    const { asks, bids } = store.askBidTable;\r\n    const currentCcyPair = store.currentKrakenPair;\r\n    const classes = useStyles();\r\n\r\n    const formatPrice = (prc: any) => {\r\n      if (prc.indexOf('.') > -1) {\r\n        return prc.slice(0, prc.indexOf('.') + ccyPriceToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return prc;\r\n    };\r\n\r\n    const formatQty = (qty: any) => {\r\n      if (qty.indexOf('.') > -1) {\r\n        return qty.slice(0, qty.indexOf('.') + ccyQtyToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return qty;\r\n    };\r\n\r\n    //console.table(asks);\r\n    return (\r\n      <table style={{ display: 'inline-block' }}>\r\n        <caption className={classes.caption}>Kraken {store.captionText}</caption>        \r\n        <tbody>\r\n          <tr>\r\n            <td align=\"center\"></td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ask Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody className={classes.table}>\r\n                    {asks.length ? (\r\n                      asks.map((ask) => {\r\n                        const rowClassName = store.shouldHighlight(ask[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                          <TableRow key={ask[0]} className={rowClassName}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {formatPrice(ask[0])}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{formatQty(ask[1])}</TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Bid Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {bids.length ? (\r\n                      bids.map((bid) => {\r\n                        const rowClassName = store.shouldHighlight(bid[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                          <TableRow key={bid[0]} className={rowClassName}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {formatPrice(bid[0])}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{formatQty(bid[1])}</TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './../../src/css/index.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AppStoreBinance } from 'src/logic/appStoreBinance';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    \r\n    fontSize: 14,\r\n    \r\n  },\r\n  head: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  caption: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    margin: '2px',\r\n  },\r\n  base:{\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  highlight:{\r\n    backgroundColor: \"#AECCD7\",\r\n  },\r\n});\r\n\r\nconst ccyPriceToPrecise: any = {\r\n  'BTC/USD': 0,\r\n  'BTC/USDT': 0,\r\n  'BTC/EUR': 0,\r\n  'ETH/USD': 2,\r\n  'ETH/EUR': 2,\r\n  'ETH/USDT': 2,\r\n  'XRP/USD': 5,\r\n  'XRP/USDT': 5,\r\n  'XRP/BTC': 9,\r\n  'XRP/ETH': 9,\r\n  'XRP/EUR': 5,\r\n  'ADA/USD': 5,\r\n  'ADA/USDT': 5,\r\n  'ADA/BTC': 8,\r\n  'ADA/ETH': 8,\r\n  'ADA/EUR': 5,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 8,\r\n  'BCH/ETH': 8,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 8,\r\n  'LTC/ETH': 8,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 2,\r\n  'EOS/USDT': 2,\r\n  'EOS/BTC': 8,\r\n  'EOS/ETH': 8,\r\n  'EOS/EUR': 2,\r\n  'DASH/BTC': 8,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 5,\r\n  'XLM/USDT': 5,\r\n  'XLM/BTC': 8,\r\n  'XLM/ETH': 8,\r\n  'XLM/EUR': 5,\r\n  'LINK/USD': 2,\r\n  'LINK/USDT': 2,\r\n  'LINK/BTC': 8,\r\n  'LINK/ETH': 8,\r\n  'LINK/EUR': 2,\r\n};\r\nconst ccyQtyToPrecise: any = {\r\n  'BTC/USD': 2,\r\n  'BTC/USDT': 2,\r\n  'BTC/EUR': 2,\r\n  'ETH/USD': 3,\r\n  'ETH/EUR': 3,\r\n  'ETH/USDT': 3,\r\n  'XRP/USD': 0,\r\n  'XRP/USDT': 0,\r\n  'XRP/EUR': 0,\r\n  'XRP/BTC': 0,\r\n  'XRP/ETH': 0,\r\n  'ADA/USD': 0,\r\n  'ADA/USDT': 0,\r\n  'ADA/EUR': 0,\r\n  'ADA/BTC': 0,\r\n  'ADA/ETH': 0,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 2,\r\n  'BCH/ETH': 2,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 2,\r\n  'LTC/ETH': 2,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 0,\r\n  'EOS/USDT': 0,\r\n  'EOS/BTC': 0,\r\n  'EOS/ETH': 0,\r\n  'EOS/EUR': 0,\r\n  'DASH/BTC': 2,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 0,\r\n  'XLM/USDT': 0,\r\n  'XLM/EUR': 0,\r\n  'XLM/BTC': 0,\r\n  'XLM/ETH': 0,\r\n  'LINK/USD': 0,\r\n  'LINK/USDT': 0,\r\n  'LINK/BTC': 0,\r\n  'LINK/ETH': 0,\r\n  'LINK/EUR': 0,\r\n};\r\ninterface MonitorProps {\r\n  storeBinance: AppStoreBinance;\r\n}\r\nexport const BinanceOrdersTable = observer(\r\n  ({ storeBinance }: MonitorProps): JSX.Element => {\r\n    /*console.log(store);*/\r\n\r\n    const { asks, bids } = storeBinance.askBidTable;\r\n    const currentCcyPair = storeBinance.currentBinancePair;\r\n    const classes = useStyles();\r\n\r\n    const formatPrice = (prc: any) => {\r\n      if (prc.indexOf('.') > -1) {\r\n        return prc.slice(0, prc.indexOf('.') + ccyPriceToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return prc;\r\n    };\r\n\r\n    const formatQty = (qty: any) => {\r\n      if (qty.indexOf('.') > -1) {\r\n        return qty.slice(0, qty.indexOf('.') + ccyQtyToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return qty;\r\n    };\r\n\r\n    return (\r\n      <table style={{ display: 'inline-block' }}>\r\n        <caption className={classes.caption}>Binance</caption>        \r\n        <tbody>\r\n          <tr>\r\n            <td align=\"center\"></td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ask Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody className={classes.table}>\r\n                    {asks.length ? (\r\n                      asks.map((ask) => {\r\n                        const rowClassName = storeBinance.shouldHighlight(ask[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                          <TableRow key={ask[0]} className={rowClassName}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {formatPrice(ask[0])}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{formatQty(ask[1])}</TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Bid Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {bids.length ? (\r\n                      bids.map((bid) => {\r\n                        const rowClassName = storeBinance.shouldHighlight(bid[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                        <TableRow key={bid[0]} className={rowClassName}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {formatPrice(bid[0])}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatQty(bid[1])}</TableCell>\r\n                        </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './../../src/css/index.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AppStoreBitstamp } from 'src/logic/appStoreBitstamp';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    \r\n    fontSize: 14,\r\n  },\r\n  head: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  caption: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    margin: '2px',\r\n  },\r\n  base:{\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  highlight:{\r\n    backgroundColor: \"#AECCD7\",\r\n  },\r\n});\r\n\r\nconst ccyPriceToPrecise: any = {\r\n  'BTC/USD': 0,\r\n  'BTC/USDT': 0,\r\n  'BTC/EUR': 0,\r\n  'ETH/USD': 2,\r\n  'ETH/EUR': 2,\r\n  'ETH/USDT': 2,\r\n  'XRP/USD': 5,\r\n  'XRP/USDT': 5,\r\n  'XRP/BTC': 9,\r\n  'XRP/ETH': 9,\r\n  'XRP/EUR': 5,\r\n  'ADA/USD': 5,\r\n  'ADA/USDT': 5,\r\n  'ADA/BTC': 8,\r\n  'ADA/ETH': 8,\r\n  'ADA/EUR': 5,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 8,\r\n  'BCH/ETH': 8,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 8,\r\n  'LTC/ETH': 8,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 2,\r\n  'EOS/USDT': 2,\r\n  'EOS/BTC': 8,\r\n  'EOS/ETH': 8,\r\n  'EOS/EUR': 2,\r\n  'DASH/BTC': 8,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 5,\r\n  'XLM/USDT': 5,\r\n  'XLM/BTC': 8,\r\n  'XLM/ETH': 8,\r\n  'XLM/EUR': 5,\r\n  'LINK/USD': 2,\r\n  'LINK/USDT': 2,\r\n  'LINK/BTC': 8,\r\n  'LINK/ETH': 8,\r\n  'LINK/EUR': 2,\r\n};\r\nconst ccyQtyToPrecise: any = {\r\n  'BTC/USD': 2,\r\n  'BTC/USDT': 2,\r\n  'BTC/EUR': 2,\r\n  'ETH/USD': 3,\r\n  'ETH/EUR': 3,\r\n  'ETH/USDT': 3,\r\n  'XRP/USD': 0,\r\n  'XRP/USDT': 0,\r\n  'XRP/EUR': 0,\r\n  'XRP/BTC': 0,\r\n  'XRP/ETH': 0,\r\n  'ADA/USD': 0,\r\n  'ADA/USDT': 0,\r\n  'ADA/EUR': 0,\r\n  'ADA/BTC': 0,\r\n  'ADA/ETH': 0,\r\n  'BCH/USD': 2,\r\n  'BCH/USDT': 2,\r\n  'BCH/BTC': 2,\r\n  'BCH/ETH': 2,\r\n  'BCH/EUR': 2,\r\n  'LTC/USD': 2,\r\n  'LTC/USDT': 2,\r\n  'LTC/BTC': 2,\r\n  'LTC/ETH': 2,\r\n  'LTC/EUR': 2,\r\n  'EOS/USD': 0,\r\n  'EOS/USDT': 0,\r\n  'EOS/BTC': 0,\r\n  'EOS/ETH': 0,\r\n  'EOS/EUR': 0,\r\n  'DASH/BTC': 2,\r\n  'DASH/USD': 2,\r\n  'DASH/EUR': 2,\r\n  'XLM/USD': 0,\r\n  'XLM/USDT': 0,\r\n  'XLM/EUR': 0,\r\n  'XLM/BTC': 0,\r\n  'XLM/ETH': 0,\r\n  'LINK/USD': 0,\r\n  'LINK/USDT': 0,\r\n  'LINK/BTC': 0,\r\n  'LINK/ETH': 0,\r\n  'LINK/EUR': 0,\r\n};\r\ninterface MonitorProps {\r\n  storeBitstamp: AppStoreBitstamp;\r\n}\r\nexport const BitstampOrdersTable = observer(\r\n  ({ storeBitstamp }: MonitorProps): JSX.Element => {\r\n    const { asks, bids } = storeBitstamp.askBidTable;\r\n    //const lastTradePrc = storeBitstamp.lastTradePrice;\r\n    const classes = useStyles();\r\n    const currentCcyPair = storeBitstamp.currentBitstampPair;\r\n\r\n    const formatPrice = (prc: any) => {\r\n      if (prc.indexOf('.') > -1) {\r\n        return prc.slice(0, prc.indexOf('.') + ccyPriceToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return prc;\r\n    };\r\n\r\n    const formatQty = (qty: any) => {\r\n      if (qty.indexOf('.') > -1) {\r\n        return qty.slice(0, qty.indexOf('.') + ccyQtyToPrecise[currentCcyPair] || 5);\r\n      }\r\n      return qty;\r\n    };\r\n\r\n    return (\r\n      <table style={{ display: 'inline-block' }}>\r\n        <caption className={classes.caption}>Bitstamp {/*lastTradePrc*/}</caption>        \r\n        <tbody>\r\n          <tr>\r\n            <td align=\"center\"></td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ask Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {asks.length ? (\r\n                      asks.map((ask) => {\r\n                        const rowClassName = storeBitstamp.shouldHighlight(ask[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                        <TableRow key={ask[0]} className={rowClassName}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {formatPrice(ask[0])}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatQty(ask[1])}</TableCell>\r\n                        </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n            <td className=\"inline\">\r\n              <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Bid Price</TableCell>\r\n                      <TableCell align=\"right\">Volume (Qty)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  {bids.length ? (\r\n                      bids.map((bid) => {\r\n                        const rowClassName = storeBitstamp.shouldHighlight(bid[1]) ? classes.highlight : classes.base;\r\n                        return (\r\n                        <TableRow key={bid[0]} className={rowClassName}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {formatPrice(bid[0])}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatQty(bid[1])}</TableCell>\r\n                        </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow key={'no-data'}>\r\n                        <TableCell component=\"th\" scope=\"row\" colSpan={2} align=\"center\">\r\n                          No orders\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  },\r\n);\r\n","// import { map } from 'lodash';\r\nimport React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './../../src/css/index.css';\r\n\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { Header } from './Header';\r\n// import { OrderMonitorMenu } from './OrderMonitorMenu';\r\n// import { TopLogoPanel } from './TopLogoPanel';\r\nimport { AppStore } from 'src/logic/appStore';\r\n\r\n// import { subscribeToBitfinexCurrencyPair } from 'src/logic/bitfinexRest';\r\n// import { PAIRS } from './../components/OrderMonitorMenu';\r\nimport { BitfinexOrdersTable } from './BitfinexOrdersTable';\r\nimport { KrakenOrdersTable } from 'src/components/KrakenOrdersTable';\r\nimport { BinanceOrdersTable } from 'src/components/BinanceOrdersTable';\r\nimport { BitstampOrdersTable } from 'src/components/BitstampOrdersTable';\r\n// import { BittrexOrdersTable } from './BittrexOrdersTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { Footer } from './Footer';\r\n// import { RightAd } from './RightAd';\r\n// import { TopAd } from './TopAd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1600px',\r\n    overflowX: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n}));\r\n\r\ninterface MonitorProps {\r\n  store: AppStore;\r\n}\r\n\r\nexport const OrdersMonitorTables = observer(\r\n  ({\r\n    store,\r\n  }: MonitorProps): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n          <div className={classes.tableHolder}>\r\n            <Grid container justify=\"flex-start\" spacing={1}>\r\n              <Grid item xs={3}>\r\n                <KrakenOrdersTable store={store.tables.kraken} />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <BitfinexOrdersTable storeBitfinex={store.tables.bitfinex} />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <BinanceOrdersTable storeBinance={store.tables.binance} />\r\n              </Grid>\r\n              {/*<BittrexOrdersTable storeBittrex={storeBittrex} />*/}\r\n              <Grid item xs={3}>\r\n                <BitstampOrdersTable storeBitstamp={store.tables.bitstamp} />\r\n              </Grid>\r\n            </Grid>\r\n          </div>          \r\n    );\r\n  },\r\n);\r\n\r\n// export const OrderMonitor = (props: any, state: any) => {\r\n//   console.log('mypops', props, state);\r\n//   return (\r\n\r\n//     <div>\r\n//       <TopLogoPanel />\r\n//       <Header />\r\n//       <button onClick={() => { }}></button>\r\n//       <OrderMonitorMenu />\r\n\r\n//     </div>\r\n//   );\r\n\r\n// };\r\n","export type SelectorOptions = 'BTC/EUR' | 'BTC/USD' | 'BTC/USDT' | 'ETH/EUR' | 'ETH/USD' | 'ETH/USDT' | 'XRP/BTC' | 'XRP/ETH' | 'XRP/USD' | 'XRP/EUR' |'XRP/USDT' | 'ADA/BTC' | 'ADA/ETH' | 'ADA/USD' | 'ADA/EUR' |'ADA/USDT' | 'BCH/BTC' | 'BCH/ETH' | 'BCH/USD' | 'BCH/EUR' |'BCH/USDT' | 'LTC/BTC' | 'LTC/ETH' | 'LTC/USD' | 'LTC/EUR' |'LTC/USDT' | 'EOS/BTC' | 'EOS/ETH' | 'EOS/USD' | 'EOS/EUR' |'EOS/USDT' | 'DASH/BTC' | 'DASH/USD' |'DASH/EUR' | 'XLM/BTC' | 'XLM/ETH' | 'XLM/USD' | 'XLM/EUR' |'XLM/USDT' | 'LINK/BTC' | 'LINK/ETH' | 'LINK/USD' | 'LINK/EUR' |'LINK/USDT' ;\r\nexport interface TradePairsConfig {\r\n  kraken: string;\r\n  bitfinex: string;\r\n  binance: string;\r\n  bittrex: string;\r\n  bitstamp: string;\r\n};\r\n\r\nexport const PAIRS: Record<SelectorOptions, TradePairsConfig> = {\r\n  'BTC/EUR': {\r\n    kraken: 'BTC/EUR',\r\n    bitfinex: 'btceur',\r\n    binance: 'BTCEUR',\r\n    bittrex: 'BTC-EUR',\r\n    bitstamp: 'btceur',\r\n  },\r\n  'BTC/USD': {\r\n    kraken: 'BTC/USD',\r\n    bitfinex: 'btcusd',\r\n    binance: 'BTCUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'btcusd',\r\n  },\r\n  'BTC/USDT': {\r\n    kraken: 'BTC/USDT',\r\n    bitfinex: 'btcusd',\r\n    binance: 'BTCUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'btcusd',\r\n  },\r\n  'ETH/USD': {\r\n    kraken: 'ETH/USD',\r\n    bitfinex: 'ethusd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'ethusd',\r\n  },\r\n  'ETH/EUR': {\r\n    kraken: 'ETH/EUR',\r\n    bitfinex: 'etheur',\r\n    binance: 'ETHEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'etheur',\r\n  },\r\n  'ETH/USDT': {\r\n    kraken: 'ETH/USDT',\r\n    bitfinex: '',\r\n    binance: 'ETHUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'XRP/BTC': {\r\n    kraken: 'XRP/BTC',\r\n    bitfinex: 'xrpbtc',\r\n    binance: 'XRPBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xrpbtc',\r\n  },\r\n  'XRP/ETH': {\r\n    kraken: 'XRP/ETH',\r\n    bitfinex: '',\r\n    binance: 'XRPETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'XRP/USD': {\r\n    kraken: 'XRP/USD',\r\n    bitfinex: 'xrpusd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xrpusd',\r\n  },\r\n  'XRP/EUR': {\r\n    kraken: 'XRP/EUR',\r\n    bitfinex: '',\r\n    binance: 'XRPEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xrpeur',\r\n  },\r\n  'XRP/USDT': {\r\n    kraken: 'XRP/USDT',\r\n    bitfinex: '',\r\n    binance: 'XRPUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'ADA/BTC': {\r\n    kraken: 'ADA/BTC',\r\n    bitfinex: 'adabtc',\r\n    binance: 'ADABTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'ADA/ETH': {\r\n    kraken: 'ADA/ETH',\r\n    bitfinex: '',\r\n    binance: 'ADAETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'ADA/USD': {\r\n    kraken: 'ADA/USD',\r\n    bitfinex: 'adausd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'ADA/EUR': {\r\n    kraken: 'ADA/EUR',\r\n    bitfinex: '',\r\n    binance: 'ADAEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'ADA/USDT': {\r\n    kraken: 'ADA/USDT',\r\n    bitfinex: '',\r\n    binance: 'ADAUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'BCH/BTC': {\r\n    kraken: 'BCH/BTC',\r\n    bitfinex: '',\r\n    binance: 'BCHBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'bchbtc',\r\n  },\r\n  'BCH/ETH': {\r\n    kraken: 'BCH/ETH',\r\n    bitfinex: '',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'BCH/USD': {\r\n    kraken: 'BCH/USD',\r\n    bitfinex: 'bchn:usd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'bchusd',\r\n  },\r\n  'BCH/EUR': {\r\n    kraken: 'BCH/EUR',\r\n    bitfinex: '',\r\n    binance: 'BCHEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'bcheur',\r\n  },\r\n  'BCH/USDT': {\r\n    kraken: 'BCH/USDT',\r\n    bitfinex: '',\r\n    binance: 'BCHUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'LTC/BTC': {\r\n    kraken: 'LTC/BTC',\r\n    bitfinex: 'ltcbtc',\r\n    binance: 'LTCBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'ltcbtc',\r\n  },\r\n  'LTC/ETH': {\r\n    kraken: 'LTC/ETH',\r\n    bitfinex: '',\r\n    binance: 'LTCETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'LTC/USD': {\r\n    kraken: 'LTC/USD',\r\n    bitfinex: 'ltcusd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'ltcusd',\r\n  },\r\n  'LTC/EUR': {\r\n    kraken: 'LTC/EUR',\r\n    bitfinex: '',\r\n    binance: 'LTCEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'ltceur',\r\n  },\r\n  'LTC/USDT': {\r\n    kraken: 'LTC/USDT',\r\n    bitfinex: '',\r\n    binance: 'LTCUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'EOS/BTC': {\r\n    kraken: 'EOS/BTC',\r\n    bitfinex: 'eosbtc',\r\n    binance: 'EOSBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'EOS/ETH': {\r\n    kraken: 'EOS/ETH',\r\n    bitfinex: 'eoseth',\r\n    binance: 'EOSETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'EOS/USD': {\r\n    kraken: 'EOS/USD',\r\n    bitfinex: 'eosusd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'EOS/EUR': {\r\n    kraken: 'EOS/EUR',\r\n    bitfinex: 'eoseur',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'EOS/USDT': {\r\n    kraken: 'EOS/USDT',\r\n    bitfinex: '',\r\n    binance: 'EOSUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'DASH/BTC': {\r\n    kraken: 'DASH/BTC',\r\n    bitfinex: '',\r\n    binance: 'DASHBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'DASH/USD': {\r\n    kraken: 'DASH/USD',\r\n    bitfinex: '',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'DASH/EUR': {\r\n    kraken: 'DASH/EUR',\r\n    bitfinex: '',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'LINK/BTC': {\r\n    kraken: 'LINK/BTC',\r\n    bitfinex: '',\r\n    binance: 'LINKBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'linkbtc',\r\n  },\r\n  'LINK/ETH': {\r\n    kraken: 'LINK/ETH',\r\n    bitfinex: '',\r\n    binance: 'LINKETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'linketh',\r\n  },\r\n  'LINK/USD': {\r\n    kraken: 'LINK/USD',\r\n    bitfinex: 'link:usd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'linkusd',\r\n  },\r\n  'LINK/EUR': {\r\n    kraken: 'LINK/EUR',\r\n    bitfinex: '',\r\n    binance: 'LINKEUR',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'linkeur',\r\n  },\r\n  'LINK/USDT': {\r\n    kraken: 'LINK/USDT',\r\n    bitfinex: '',\r\n    binance: 'LINKUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'XLM/BTC': {\r\n    kraken: '',\r\n    bitfinex: 'xlmbtc',\r\n    binance: 'XLMBTC',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xlmbtc',\r\n  },\r\n  'XLM/ETH': {\r\n    kraken: '',\r\n    bitfinex: 'xlmeth',\r\n    binance: 'XLMETH',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n  'XLM/USD': {\r\n    kraken: 'XLM/USD',\r\n    bitfinex: 'xlmusd',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xlmusd',\r\n  },\r\n  'XLM/EUR': {\r\n    kraken: 'XLM/EUR',\r\n    bitfinex: '',\r\n    binance: '',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: 'xlmeur',\r\n  },\r\n  'XLM/USDT': {\r\n    kraken: '',\r\n    bitfinex: '',\r\n    binance: 'XLMUSDT',\r\n    bittrex: 'BTC-USD',\r\n    bitstamp: '',\r\n  },\r\n};\r\n\r\nexport const DEFAULT_PAIR = 'BTC/USD';","import { debounce } from 'lodash';\r\nimport { action, computed, decorate, observable, reaction } from 'mobx';\r\nimport {\r\n  subscribeToKrakenCurrencyPair,\r\n  setKrakenDataHandler,\r\n  getKrakenSocket,\r\n} from 'src/logic/krakenSocket';\r\nimport { DEFAULT_PAIR, SelectorOptions } from 'src/logic/pairsConfig';\r\n\r\ninterface KrakenData {\r\n  as: any[];\r\n  bs: any[];\r\n}\r\n\r\nexport class AppStoreKraken {\r\n  currentKrakenPair: SelectorOptions = DEFAULT_PAIR;\r\n  orderQuantity: number = 1;\r\n  orderQuantityHighlight: number = 1;\r\n\r\n  defaultQuantityHighlight = 1;\r\n\r\n  shouldHighlight = (inputValue: string) => {\r\n    if (this.orderQuantityHighlight === this.defaultQuantityHighlight) {\r\n      return false;\r\n    }\r\n\r\n    return parseFloat(inputValue) >= this.orderQuantityHighlight;\r\n  }\r\n\r\n  // captionText = 'Last Price';\r\n  captionText = '';\r\n\r\n  krakenData: KrakenData = {\r\n    as: [],\r\n    bs: [],\r\n  };\r\n\r\n  get askBidTable() {\r\n    const asks = this.krakenData.as\r\n      .filter((v) => {\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n\r\n    const bids = this.krakenData.bs\r\n      .filter((v) => {\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    //console.log('asks', asks);\r\n    return {\r\n      asks,\r\n      bids,\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.currentKrakenPair,\r\n      (pair: SelectorOptions) => {\r\n        console.log('pairChanged', pair);\r\n        subscribeToKrakenCurrencyPair(pair);\r\n      },\r\n      {\r\n        fireImmediately: true,\r\n      },\r\n    );\r\n\r\n    // setTimeout(() => {\r\n    //   this.captionText = 'La-la-la-la';\r\n    // }, 4000);\r\n  }\r\n\r\n  setOrderQuantity = debounce((input: string) => {\r\n    const quantity = parseFloat(input);\r\n    // console.log('setOrderQuantity', quantity);\r\n    if (isNaN(quantity)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantity = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantity = quantity;\r\n    // console.log('here', this.orderQuantity)\r\n  }, 1000);\r\n\r\n  setOrderQuantityHighlight = debounce((input: string) => {\r\n    const quantityHighlight = parseFloat(input);\r\n    // console.log('setHighlightOrderQuantity', quantityHighlight);\r\n    if (isNaN(quantityHighlight)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantityHighlight = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantityHighlight = quantityHighlight;\r\n  }, 1000);\r\n\r\n\r\n  setCurrentKrakenPair = (input: SelectorOptions) => {\r\n    this.resetData();\r\n    this.currentKrakenPair = input;\r\n  };\r\n\r\n  setKrakenData = (msg: any) => {\r\n    const newData = JSON.parse(msg.data);\r\n\r\n    if (\r\n      newData.channelID ||\r\n      newData.connectionID ||\r\n      !Array.isArray(newData) ||\r\n      newData.length < 2 ||\r\n      !newData[1]\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // bid update\r\n    if (newData[1].b) {\r\n      // if bid is 0 - find and remove from initial data\r\n      // this.krakenData.bs = [ ...this.krakenData.bs, ...newData[1].b ];\r\n      return;\r\n    }\r\n\r\n    // ask update\r\n    if (newData[1].a) {\r\n      // if ask is 0 - find and remove from initial data\r\n      // this.krakenData.as = [ ...this.krakenData.as, ...newData[1].a ];\r\n      return;\r\n    }\r\n\r\n    // something which is not valid for us\r\n    if (!newData[1].as || !newData[1].bs) {\r\n      return;\r\n    }\r\n\r\n    this.resetData();\r\n\r\n    console.count('onmessage');\r\n    console.log(newData[1]);\r\n    // update initial ask/bid array(1000 elements)\r\n    this.krakenData.as = newData[1].as;\r\n    this.krakenData.bs = newData[1].bs;\r\n  };\r\n\r\n  resetData = () => {\r\n    this.krakenData.as = [];\r\n    this.krakenData.bs = [];\r\n  };\r\n}\r\n\r\ndecorate(AppStoreKraken, {\r\n  currentKrakenPair: observable,\r\n  captionText: observable,\r\n  krakenData: observable,\r\n  orderQuantity: observable,\r\n  resetData: action,\r\n  setKrakenData: action,\r\n  askBidTable: computed,\r\n});\r\n\r\nconst appStoreKraken = new AppStoreKraken();\r\nsetKrakenDataHandler(appStoreKraken.setKrakenData);\r\ngetKrakenSocket();\r\n\r\nexport { appStoreKraken };\r\n","// import { json } from 'body-parser';\r\nimport { PAIRS, DEFAULT_PAIR, SelectorOptions } from 'src/logic/pairsConfig';\r\n\r\n//import {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\ninterface BitfinexOrdersData {\r\n  asks: string | undefined;\r\n  bids: string | undefined;\r\n  // socket: WebSocket | undefined;\r\n  // activePayload: string | undefined;\r\n  Response?: any | undefined;\r\n  dataHandler?: (msg: any) => void;\r\n}\r\n\r\nconst bitfinexOrdersData: BitfinexOrdersData = {\r\n  // socket: undefined,\r\n  // activePayload: undefined,\r\n  asks: undefined,\r\n  bids: undefined,\r\n  Response: undefined,\r\n};\r\n\r\nlet currencyPair = PAIRS[DEFAULT_PAIR].bitfinex;\r\nexport let bitfinexOrdersDataArr: any;\r\nlet pollingIntervalBitfinex: NodeJS.Timeout;\r\n\r\nexport const getBitfinexOrdersData = () => {\r\n  //console.log('###', currencyPair);\r\n\r\n  async function loadJson(urlBitfinex: RequestInfo) {\r\n    // const proxy = 'https://cors-anywhere.herokuapp.com/'; //need to avoid external proxy\r\n    //console.log('###', currencyPair, urlBitfinex);\r\n    let responseBitfinex = await fetch(urlBitfinex, {\r\n      // mode: 'no-cors',\r\n      // referrerPolicy: 'no-referrer',\r\n      // credentials: 'omit',\r\n    });\r\n    let bitData = await responseBitfinex.json();\r\n    //console.log('bitData', bitData);\r\n    return bitData;\r\n  }\r\n\r\n  function doRequestBitfinex() {\r\n    // IMPORTANT: use node server on prod\r\n    // for local development we will use proxy,\r\n    // check setupProxy.js for details\r\n    // const urlBitfinex = `https://api.bitfinex.com/v1/book/${currencyPair}?limit_bids=2000&limit_asks=2000`; //Should be limit_bids=10k&limit_asks=10k, 'btcusd' should be taken from [PAIRS[inputPair].bitfinex]]\r\n    const baseUrl = (process.env.NODE_ENV === 'development')?'':'https://api.bitfinex.com';\r\n    const urlBitfinex = `${baseUrl}/v1/book/${currencyPair}?limit_bids=4000&limit_asks=4000`; //Should be limit_bids=10k&limit_asks=10k, 'btcusd' should be taken from [PAIRS[inputPair].bitfinex]]\r\n    loadJson(urlBitfinex).then((data) => {\r\n      bitfinexOrdersDataArr = data;\r\n\r\n      if (bitfinexOrdersData.dataHandler) {\r\n        bitfinexOrdersData.dataHandler(data);\r\n      }\r\n      //console.log('bitfinexOrdersData', bitfinexOrdersDataArr);\r\n    });\r\n  }\r\n\r\n  function startPollingBitfinex() {\r\n    if (pollingIntervalBitfinex) {\r\n      clearInterval(pollingIntervalBitfinex);\r\n    }\r\n\r\n    pollingIntervalBitfinex = setInterval(doRequestBitfinex, 20000);\r\n  }\r\n\r\n  doRequestBitfinex();\r\n  startPollingBitfinex();\r\n};\r\n\r\nexport const setBitfinexDataHandler = (dataHandler: (msg: any) => void) => {\r\n  bitfinexOrdersData.dataHandler = dataHandler;\r\n};\r\n\r\n// export const setPayloadForKrakenCurrencyPair = (inputPair: string) => {\r\n//   const payload = getSubscribePayload(inputPair);\r\n//   krakenData.activePayload = payload;\r\n// };\r\nexport const subscribeToBitfinexCurrencyPair = (inputPair: SelectorOptions) => {\r\n  //console.log(inputPair);\r\n  currencyPair = PAIRS[inputPair].bitfinex;\r\n  getBitfinexOrdersData();\r\n};\r\n\r\n// export {bitfinexOrdersData};\r\n","import { debounce } from 'lodash';\r\nimport { action, computed, decorate, observable, reaction } from 'mobx';\r\nimport {\r\n  subscribeToBitfinexCurrencyPair,\r\n  setBitfinexDataHandler,\r\n  // getBitfinexSocket,\r\n} from 'src/logic/bitfinexRest';\r\nimport { DEFAULT_PAIR, SelectorOptions } from 'src/logic/pairsConfig';\r\nimport { bitfinexOrdersDataArr } from 'src/logic/bitfinexRest';\r\n//console.log ('bit1', bitfinexOrdersDataArr);\r\ninterface bitfinexOrdersDataArr {\r\n  asks: any[];\r\n  bids: any[];\r\n}\r\n\r\nexport class AppStoreBitfinex {\r\n  currentBitfinexPair: SelectorOptions = DEFAULT_PAIR;\r\n  orderQuantity: number = 1;\r\n  orderQuantityHighlight: number = 1;\r\n\r\n  defaultQuantityHighlight = 1;\r\n\r\n  shouldHighlight = (inputValue: string) => {\r\n    if (this.orderQuantityHighlight === this.defaultQuantityHighlight) {\r\n      return false;\r\n    }\r\n\r\n    return parseFloat(inputValue) >= this.orderQuantityHighlight;\r\n  }\r\n\r\n  bitfinexData: bitfinexOrdersDataArr = {\r\n    asks: [],\r\n    bids: [],\r\n  };\r\n\r\n  get askBidTable() {\r\n    // console.table('@@@ get', this.bitfinexData.asks);\r\n\r\n    const asks = this.bitfinexData.asks\r\n      .filter((v) => {\r\n        // console.log('@@@ get ask', parseFloat(v.amount));\r\n        return parseFloat(v.amount) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    // console.log('@@@ asks', asks);\r\n    const bids = this.bitfinexData.bids\r\n      .filter((v) => {\r\n        return parseFloat(v.amount) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    return {\r\n      asks,\r\n      bids,\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.currentBitfinexPair,\r\n      (pair: SelectorOptions) => {\r\n        console.log('pairChanged', pair);\r\n        subscribeToBitfinexCurrencyPair(pair);\r\n      },\r\n      {\r\n        fireImmediately: true,\r\n      },\r\n    );\r\n\r\n    // getBitfinexOrdersData();\r\n  }\r\n\r\n  setOrderQuantity = debounce((input: string) => {\r\n    //Need to rename setOrderQuantity for Bitfinex\r\n    const quantity = parseFloat(input);\r\n    console.log('setOrderQuantity Bitfinex', quantity);\r\n    if (isNaN(quantity)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantity = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantity = quantity;\r\n    console.log('here', this.orderQuantity);\r\n  }, 1000);\r\n\r\n  setOrderQuantityHighlight = debounce((input: string) => {\r\n    const quantityHighlight = parseFloat(input);\r\n    // console.log('setHighlightOrderQuantity', quantityHighlight);\r\n    if (isNaN(quantityHighlight)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantityHighlight = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantityHighlight = quantityHighlight;\r\n  }, 1000);\r\n\r\n  setCurrentBitfinexPair = (input: SelectorOptions) => {\r\n    this.resetData();\r\n    this.currentBitfinexPair = input;\r\n  };\r\n\r\n  setBitfinexData = (msg: any) => {\r\n    const newData = msg;\r\n\r\n    //  if (newData.channelID || newData.connectionID || !Array.isArray(newData) || newData.length < 2 || !newData[1]) {\r\n\r\n    //      return;\r\n    //  }\r\n\r\n    this.resetData();\r\n\r\n    console.count('onmessage');\r\n    console.log(newData[1]);\r\n    this.bitfinexData.asks = newData.asks;\r\n    this.bitfinexData.bids = newData.bids;\r\n  };\r\n\r\n  resetData = () => {\r\n    this.bitfinexData.asks = [];\r\n    this.bitfinexData.bids = [];\r\n  };\r\n}\r\n\r\ndecorate(AppStoreBitfinex, {\r\n  currentBitfinexPair: observable,\r\n  bitfinexData: observable,\r\n  orderQuantity: observable,\r\n  resetData: action,\r\n  setBitfinexData: action,\r\n  askBidTable: computed,\r\n});\r\n\r\nconst appStoreBitfinex = new AppStoreBitfinex();\r\n\r\nsetBitfinexDataHandler(appStoreBitfinex.setBitfinexData);\r\n\r\nexport { appStoreBitfinex };\r\n","// import { json } from 'body-parser';\r\nimport { PAIRS, SelectorOptions } from 'src/logic/pairsConfig';\r\n\r\n//import {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\ninterface BinanceOrdersData {\r\n  asks: string | undefined;\r\n  bids: string | undefined;\r\n  //lastUpdateId: number | undefined;\r\n  // socket: WebSocket | undefined;\r\n  // activePayload: string | undefined;\r\n  Response?: any | undefined;\r\n  dataHandler?: (msg: any) => void;\r\n}\r\n\r\nconst binanceOrdersData: BinanceOrdersData = {\r\n  // socket: undefined,\r\n  // activePayload: undefined,\r\n  asks: undefined,\r\n  bids: undefined,\r\n  Response: undefined,\r\n  //lastUpdateId: undefined,\r\n};\r\n\r\n// let intervalId: NodeJS.Timeout;\r\n\r\n/*const sendData = () => {\r\n  console.log('sendBinanceData');\r\n  intervalId = setInterval(() => {\r\n    console.log('sendBinanceData setInterval', binanceData);\r\n    if (!binanceData.activePayload) {\r\n      return;\r\n    }\r\n\r\n    const socketPromise = getBinanceSocket();\r\n    socketPromise.then((socket) => {\r\n      if (!binanceData.activePayload) {\r\n        return;\r\n      }\r\n\r\n      console.log('here', binanceData);\r\n\r\n      try {\r\n        socket.send(binanceData.activePayload);\r\n      } catch (error) {\r\n        console.error('Binance socket error :' + error);\r\n      }\r\n    });\r\n  }, 3000);\r\n\r\n  if (!binanceData.activePayload) {\r\n    return;\r\n  }\r\n\r\n  binanceData.socket?.send(binanceData.activePayload);\r\n}*/\r\n\r\n/*export function restoreBinanceSocket() {\r\n  return new Promise<WebSocket>((resolve) => {\r\n    binanceData.socket = new WebSocket('wss://dex.binance.org/api/ws');\r\n\r\n    binanceData.socket.onclose = () => {\r\n      restoreBinanceSocket();\r\n      console.log('WebSocket is closed now.');\r\n    }\r\n\r\n    binanceData.socket.onopen = () => {\r\n      console.log('[open] Connection established to Binance 1');\r\n      intervalId && clearInterval(intervalId);\r\n      sendData();\r\n      resolve(binanceData.socket);\r\n    }\r\n\r\n    binanceData.socket.onerror = (error: any) => {\r\n      console.log(`[error] ${error.message}`);\r\n    }\r\n\r\n    binanceData.socket.onmessage = function (msg) {\r\n      binanceData.dataHandler && binanceData.dataHandler(msg);\r\n    }\r\n  });\r\n}*/\r\n\r\n/*export const getBinanceSocket = (): Promise<WebSocket> => {\r\n  if (!binanceData.socket) {\r\n    return restoreBinanceSocket();\r\n  }\r\n\r\n  return new Promise(resolve => {\r\n    resolve(binanceData.socket);\r\n  });\r\n}*/\r\n\r\n/*const getSubscribeBinancePayload = (inputPair: string) => {\r\n\r\n\r\n  const payload = { method: \"subscribe\", topic: \"allMiniTickers\", symbols: [\"\"] };//$all\r\n\r\n  return JSON.stringify(payload);\r\n};*/\r\nlet currencyPair = 'BTCUSDT';\r\n\r\nexport let binanceOrdersDataArr: any;\r\nlet pollingInterval: NodeJS.Timeout;\r\n\r\nexport const getBinanceOrdersData = () => {\r\n  //const proxy = 'https://cors-anywhere.herokuapp.com/'; //need to avoid external proxy\r\n\r\n  async function loadJson(urlBinance: RequestInfo) {\r\n    let responseBinance = await fetch(urlBinance);\r\n    let binData = await responseBinance.json();\r\n    return binData;\r\n  }\r\n\r\n  function doRequest() {\r\n    const urlBinance = `https://www.binance.com/api/v3/depth?symbol=${currencyPair}&limit=1000`; //Should be limit_bids=1000&limit_asks=1000, 'btcusd' should be taken from [PAIRS[inputPair].binance]]\r\n    loadJson(urlBinance).then((data) => {\r\n      binanceOrdersDataArr = data;\r\n\r\n      if (binanceOrdersData.dataHandler) {\r\n        binanceOrdersData.dataHandler(data);\r\n      }\r\n      console.log('binanceOrdersData', binanceOrdersDataArr);\r\n    });\r\n  }\r\n  function startPolling() {\r\n    if (pollingInterval) {\r\n      clearInterval(pollingInterval);\r\n    }\r\n\r\n    pollingInterval = setInterval(doRequest, 3000);\r\n  }\r\n\r\n  doRequest();\r\n  startPolling();\r\n};\r\n\r\n// getBinanceOrdersData();\r\n// console.log('Binance onLoad works');\r\n\r\nexport const setBinanceDataHandler = (dataHandler: (msg: any) => void) => {\r\n  binanceOrdersData.dataHandler = dataHandler;\r\n};\r\n\r\n/*{\r\n  event: 'subscribe',\r\n  channel: 'book',\r\n  symbol: 'tBTCUSD', //[PAIRS[inputPair].binance], // [ inputPair ]\r\n  len: '100'\r\n};*/\r\n\r\n// export const setPayloadForKrakenCurrencyPair = (inputPair: string) => {\r\n//   const payload = getSubscribePayload(inputPair);\r\n//   krakenData.activePayload = payload;\r\n// };\r\n\r\nexport const subscribeToBinanceCurrencyPair = (inputPair: SelectorOptions) => {\r\n  currencyPair = PAIRS[inputPair].binance;\r\n  getBinanceOrdersData();\r\n  // const socketPromise = getBinanceSocket();\r\n  // const payload = getSubscribeBinancePayload(inputPair);\r\n  //  binanceOrdersData.activePayload = payload;\r\n  /*  socketPromise.then((socket) => {\r\n      socket.send(payload);\r\n     });*/\r\n};\r\n\r\n// export {binanceOrdersData};\r\n","import { debounce } from 'lodash';\r\nimport { action, computed, decorate, observable, reaction } from 'mobx';\r\nimport {\r\n  subscribeToBinanceCurrencyPair,\r\n  setBinanceDataHandler,\r\n  // getBinanceSocket,\r\n} from 'src/logic/binanceRest';\r\nimport { DEFAULT_PAIR, SelectorOptions } from 'src/logic/pairsConfig';\r\n//import { getBinanceOrdersData } from 'src/logic/binanceRest';\r\nimport { binanceOrdersDataArr } from 'src/logic/binanceRest';\r\n//console.log ('bit1', binanceOrdersDataArr);\r\ninterface binanceOrdersDataArr {\r\n  // lastUpdateId: any;\r\n  asks: any[];\r\n  bids: any[];\r\n}\r\n\r\nexport class AppStoreBinance {\r\n  currentBinancePair: SelectorOptions = DEFAULT_PAIR;\r\n  orderQuantity: number = 1;\r\n  orderQuantityHighlight: number = 1;\r\n\r\n  defaultQuantityHighlight = 1;\r\n\r\n  shouldHighlight = (inputValue: string) => {\r\n    if (this.orderQuantityHighlight === this.defaultQuantityHighlight) {\r\n      return false;\r\n    }\r\n    \r\n\r\n    return parseFloat(inputValue) >= this.orderQuantityHighlight;\r\n  }\r\n\r\n  binanceData: binanceOrdersDataArr = {\r\n    asks: [],\r\n    bids: [],\r\n  };\r\n\r\n  get askBidTable() {\r\n    //console.table('@@@ get', this.binanceData.asks);\r\n\r\n    const asks = this.binanceData.asks\r\n      .filter((v) => {\r\n        // console.log('@@@ get ask binance', parseFloat(v[1]));\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    //console.log('@@@ asks binance', asks);\r\n    const bids = this.binanceData.bids\r\n      .filter((v) => {\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    return {\r\n      asks,\r\n      bids,\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.currentBinancePair,\r\n      (pair: SelectorOptions) => {\r\n        // console.log('pairChanged', pair);\r\n        subscribeToBinanceCurrencyPair(pair);\r\n      },\r\n      {\r\n        fireImmediately: true,\r\n      },\r\n    );\r\n  }\r\n\r\n  setOrderQuantity = debounce((input: string) => {\r\n    //Need to rename setOrderQuantity for Binance\r\n    const quantity = parseFloat(input);\r\n    // console.log('setOrderQuantity Binance', quantity);\r\n    if (isNaN(quantity)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantity = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantity = quantity;\r\n    // console.log('here', this.orderQuantity);\r\n  }, 1000);\r\n\r\n  setOrderQuantityHighlight = debounce((input: string) => {\r\n    const quantityHighlight = parseFloat(input);\r\n    // console.log('setHighlightOrderQuantity', quantityHighlight);\r\n    if (isNaN(quantityHighlight)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantityHighlight = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantityHighlight = quantityHighlight;\r\n  }, 1000);\r\n\r\n  setCurrentBinancePair = (input: SelectorOptions) => {\r\n    this.resetData();\r\n    this.currentBinancePair = input;\r\n  };\r\n\r\n  setBinanceData = (msg: any) => {\r\n    const newData = msg;\r\n\r\n    //  if (newData.channelID || newData.connectionID || !Array.isArray(newData) || newData.length < 2 || !newData[1]) {\r\n\r\n    //      return;\r\n    //  }\r\n\r\n    this.resetData();\r\n\r\n    console.count('onmessage');\r\n    console.log(newData[1]);\r\n    this.binanceData.asks = newData.asks;\r\n    this.binanceData.bids = newData.bids;\r\n  };\r\n\r\n  resetData = () => {\r\n    this.binanceData.asks = [];\r\n    this.binanceData.bids = [];\r\n  };\r\n}\r\n\r\ndecorate(AppStoreBinance, {\r\n  currentBinancePair: observable,\r\n  binanceData: observable,\r\n  orderQuantity: observable,\r\n  resetData: action,\r\n  setBinanceData: action,\r\n  askBidTable: computed,\r\n});\r\n\r\nconst appStoreBinance = new AppStoreBinance();\r\n\r\nsetBinanceDataHandler(appStoreBinance.setBinanceData);\r\n\r\nexport { appStoreBinance };\r\n","// import { json } from 'body-parser';\r\nimport { PAIRS, SelectorOptions } from 'src/logic/pairsConfig';\r\n\r\n//import {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\ninterface BitstampOrdersData {\r\n  asks: string | undefined;\r\n  bids: string | undefined;\r\n\r\n  activePayload: string | undefined;\r\n  Response?: any | undefined;\r\n  dataHandler?: (msg: any) => void;\r\n}\r\n// interface BitstampLastTradeData {\r\n//   last: string | undefined;\r\n  \r\n//   activePayload: string | undefined;\r\n//   Response?: any | undefined;\r\n//   dataHandler?: (msg: any) => void;\r\n// }\r\n\r\nconst bitstampOrdersData: BitstampOrdersData = {\r\n  activePayload: undefined,\r\n  asks: undefined,\r\n  bids: undefined,\r\n  Response: undefined,\r\n};\r\n// const bitstampLastTradeData: BitstampLastTradeData = {\r\n//   activePayload: undefined,\r\n//   last: undefined,\r\n  \r\n//   Response: undefined,\r\n// };\r\n\r\n\r\nlet currencyPair = 'btcusd';\r\nexport let bitstampOrdersDataArr: any;\r\n//export let bitstampLastTradeDataArr: any;\r\nlet pollingInterval: NodeJS.Timeout;\r\n\r\nexport const getBitstampOrdersData = () => {\r\n\r\n  async function loadJson(urlBitstamp: RequestInfo) {\r\n    let responseBitstamp = await fetch(urlBitstamp);\r\n    let bitstampData = responseBitstamp.json();\r\n    return bitstampData;\r\n  }\r\n\r\n  // async function loadJson(urlBitstampLastTradePrc: RequestInfo) {\r\n  //   let responseBitstampPrc = await fetch(urlBitstampLastTradePrc);\r\n  //   let bitstampPrcData = await responseBitstampPrc.json();\r\n  //   return bitstampPrcData;\r\n  //}\r\n\r\n\r\n\r\n  function doRequest() {\r\n    const urlBitstamp = `https://www.bitstamp.net/api/v2/order_book/${currencyPair}/`;\r\n    //const urlBitstampLastTradePrc = `https://www.bitstamp.net/api/v2/ticker/${currencyPair}/`;\r\n    loadJson(urlBitstamp).then((data) => {\r\n      bitstampOrdersDataArr = data;\r\n\r\n      if (bitstampOrdersData.dataHandler) {\r\n        bitstampOrdersData.dataHandler(data);\r\n      }\r\n      //console.log('bitstampOrdersData', bitstampOrdersDataArr);\r\n    });\r\n    //Getting the last trade Price \r\n    // loadJson(urlBitstampLastTradePrc).then((data) => {\r\n    //   bitstampLastTradeDataArr = data;\r\n\r\n    //   if (bitstampLastTradeData.dataHandler) {\r\n    //     bitstampLastTradeData.dataHandler(data);\r\n    //   }\r\n    //   console.log('bitstampLastTradeDataArr', bitstampLastTradeDataArr);\r\n    // });\r\n  }\r\n\r\n  function startPolling() {\r\n    if (pollingInterval) {\r\n      clearInterval(pollingInterval);\r\n    }\r\n\r\n    pollingInterval = setInterval(doRequest, 2000);\r\n  }\r\n\r\n  doRequest();\r\n  startPolling();\r\n};\r\n\r\nexport const setBitstampDataHandler = (dataHandler: (msg: any) => void) => {\r\n  bitstampOrdersData.dataHandler = dataHandler;\r\n};\r\n// export const setBitstampLastTradePriceDataHandler = (dataHandler: (msg: any) => void) => {\r\n//   bitstampLastTradeData.dataHandler = dataHandler;\r\n// };\r\n\r\nexport const subscribeToBitstampCurrencyPair = (inputPair: SelectorOptions) => {\r\n  currencyPair = PAIRS[inputPair].bitstamp;\r\n  //bitstampOrdersDataArr=[];\r\n  getBitstampOrdersData();\r\n  };\r\n\r\n\r\n","import { debounce } from 'lodash';\r\nimport { action, computed, decorate, observable, reaction } from 'mobx';\r\nimport {\r\n  subscribeToBitstampCurrencyPair,\r\n  setBitstampDataHandler,\r\n  // getBitstampSocket,\r\n} from 'src/logic/bitstampRest';\r\nimport { bitstampOrdersDataArr } from 'src/logic/bitstampRest';\r\n//import { bitstampLastTradeDataArr } from 'src/logic/bitstampRest';\r\nimport { DEFAULT_PAIR, SelectorOptions } from './pairsConfig';\r\n//console.log ('bit1', bitstampOrdersDataArr);\r\ninterface bitstampOrdersDataArr {\r\n  // lastUpdateId: any;\r\n  asks: any[];\r\n  bids: any[];\r\n}\r\n// interface bitstampLastTradeDataArr {\r\n//   // lastUpdateId: any;\r\n//   high: any;\r\n//   last: any;\r\n//   timestamp: any;\r\n//   bid: any;\r\n//   vwap: any;\r\n//   volume: any;\r\n//   low: any;\r\n//   ask: any;\r\n//   open: any;\r\n// }\r\n\r\nexport class AppStoreBitstamp {\r\n  currentBitstampPair: SelectorOptions = DEFAULT_PAIR;\r\n  orderQuantity: number = 1;\r\n  orderQuantityHighlight: number = 1;\r\n\r\n  defaultQuantityHighlight = 1;\r\n\r\n  shouldHighlight = (inputValue: string) => {\r\n    if (this.orderQuantityHighlight === this.defaultQuantityHighlight) {\r\n      return false;\r\n    }\r\n\r\n    return parseFloat(inputValue) >= this.orderQuantityHighlight;\r\n  }\r\n\r\n  bitstampData: bitstampOrdersDataArr = {\r\n    asks: [],\r\n    bids: [],\r\n  };\r\n  // bitstampLastTradeData: bitstampLastTradeDataArr = {\r\n  //   high: \"\",\r\n  //   last: \"\",\r\n  //   timestamp: [],\r\n  //   bid: [],\r\n  //   vwap: [],\r\n  //   volume: [],\r\n  //   low: [],\r\n  //   ask: [],\r\n  //   open: [],\r\n  // };\r\n\r\n  get askBidTable() {\r\n    //console.table('@@@ get', this.bitstampData.asks);\r\n\r\n    const asks = this.bitstampData.asks\r\n      .filter((v) => {\r\n        // console.log('@@@ get ask bitstamp', parseFloat(v[1]));\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n    // console.log('@@@ asks bitstamp', asks);\r\n    const bids = this.bitstampData.bids\r\n      .filter((v) => {\r\n        return parseFloat(v[1]) >= this.orderQuantity;\r\n      })\r\n      .slice(0, 30);\r\n      \r\n    return {\r\n      asks,\r\n      bids,      \r\n    };\r\n  }\r\n  // get lastTradePrice(){\r\n  //   const lastTradePrc = this.bitstampLastTradeData.last;\r\n  //   return lastTradePrc;\r\n  // }\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.currentBitstampPair,\r\n      (pair: SelectorOptions) => {\r\n        console.log('pairChanged', pair);\r\n        subscribeToBitstampCurrencyPair(pair);\r\n      },\r\n      {\r\n        fireImmediately: true,\r\n      },\r\n    );\r\n  }\r\n\r\n  setOrderQuantity = debounce((input: string) => {\r\n    //Need to rename setOrderQuantity for Bitstamp\r\n    const quantity = parseFloat(input);\r\n    console.log('setOrderQuantity Bitstamp', quantity);\r\n    if (isNaN(quantity)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantity = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantity = quantity;\r\n    console.log('here', this.orderQuantity);\r\n  }, 1000);\r\n\r\n  setOrderQuantityHighlight = debounce((input: string) => {\r\n    const quantityHighlight = parseFloat(input);\r\n    // console.log('setHighlightOrderQuantity', quantityHighlight);\r\n    if (isNaN(quantityHighlight)) {\r\n      console.warn('Wrong number', input);\r\n      this.orderQuantityHighlight = 1;\r\n      return;\r\n    }\r\n\r\n    this.orderQuantityHighlight = quantityHighlight;\r\n  }, 1000);\r\n\r\n  setCurrentBitstampPair = (input: SelectorOptions) => {\r\n    this.resetData();\r\n    this.currentBitstampPair = input;\r\n  };\r\n\r\n  setBitstampData = (msg: any) => {\r\n    const newData = msg;\r\n\r\n    //  if (newData.channelID || newData.connectionID || !Array.isArray(newData) || newData.length < 2 || !newData[1]) {\r\n\r\n    //      return;\r\n    //  }\r\n\r\n    this.resetData();\r\n\r\n    console.count('onmessage');\r\n    console.log(newData[1]);\r\n    this.bitstampData.asks = newData.asks;\r\n    this.bitstampData.bids = newData.bids;\r\n  };\r\n\r\n  //setBitstampLastPrc = (msg: any) => {\r\n   // const newData = msg;\r\n    //this.resetData();\r\n\r\n    // console.count('onmessage');\r\n    // console.log(newData[1]);\r\n   // this.bitstampLastTradeData.last = newData.lastTradePrc;\r\n    \r\n // };\r\n\r\n  resetData = () => {\r\n    this.bitstampData.asks = [];\r\n    this.bitstampData.bids = [];\r\n   // this.bitstampLastTradeData.last = \"\";\r\n  };\r\n}\r\n\r\ndecorate(AppStoreBitstamp, {\r\n  currentBitstampPair: observable,\r\n  bitstampData: observable,\r\n  orderQuantity: observable,\r\n  resetData: action,\r\n  setBitstampData: action,\r\n  askBidTable: computed,\r\n // lastTradePrice: computed,\r\n});\r\n\r\nconst appStoreBitstamp = new AppStoreBitstamp();\r\n\r\nsetBitstampDataHandler(appStoreBitstamp.setBitstampData);\r\n//setBitstampDataHandler(appStoreBitstamp.setBitstampLastPrc);\r\n\r\nexport { appStoreBitstamp };\r\n","import { action, decorate, observable } from 'mobx';\r\nimport { DEFAULT_PAIR, SelectorOptions } from 'src/logic/pairsConfig';\r\nimport { appStoreKraken } from 'src/logic/appStoreKraken';\r\nimport { appStoreBitfinex } from 'src/logic/appStoreBitfinex';\r\nimport { appStoreBinance } from 'src/logic/appStoreBinance';\r\nimport { appStoreBitstamp } from 'src/logic/appStoreBitstamp';\r\n\r\ninterface KrakenData {\r\n  as: any[];\r\n  bs: any[];\r\n}\r\n\r\nexport class AppStore {\r\n  currencyPair: SelectorOptions = DEFAULT_PAIR;\r\n  orderQuantity: number = 1;\r\n  orderQuantityHighlight: number = 1;\r\n\r\n  tables = {\r\n    kraken: appStoreKraken,\r\n    bitfinex: appStoreBitfinex,\r\n    binance: appStoreBinance,\r\n    bitstamp: appStoreBitstamp,\r\n  };\r\n\r\n  setCurrencyPair = (input: SelectorOptions) => {\r\n    this.currencyPair = input;\r\n    this.tables.kraken.setCurrentKrakenPair(input);\r\n    this.tables.bitfinex.setCurrentBitfinexPair(input);\r\n    this.tables.binance.setCurrentBinancePair(input);\r\n    this.tables.bitstamp.setCurrentBitstampPair(input);\r\n  };\r\n\r\n  setOrderQuantity = (input: string) => {\r\n    // this.orderQuantity = input;\r\n    this.tables.kraken.setOrderQuantity(input);\r\n    this.tables.bitfinex.setOrderQuantity(input);\r\n    this.tables.binance.setOrderQuantity(input);\r\n    this.tables.bitstamp.setOrderQuantity(input);\r\n  };\r\n\r\n  setOrderQuantityHighlight = (input: string) => {\r\n    // this.orderQuantity = input;\r\n    this.tables.kraken.setOrderQuantityHighlight(input);\r\n    this.tables.bitfinex.setOrderQuantityHighlight(input);\r\n    this.tables.binance.setOrderQuantityHighlight(input);\r\n    this.tables.bitstamp.setOrderQuantityHighlight(input);\r\n  };\r\n\r\n}\r\n\r\ndecorate(AppStore, {\r\n  currencyPair: observable,\r\n  orderQuantity: observable,\r\n  setCurrencyPair: action,\r\n  setOrderQuantity: action,\r\n});\r\n\r\nconst appStore = new AppStore();\r\n\r\nexport { appStore };\r\n","import { BorderColor } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './../../src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\n\r\nexport const RightAd = () => {\r\n  return (\r\n    <div style={{ visibility: 'visible', display: 'inline-block', borderColor: 'black' }}>\r\n      {/* <p>Please disable your ad-blocker! (adv 160*600 align bottom)</p>\r\n      <p>You may not like this ad, but it supports the developer and keeps this site free.</p> */}\r\n    </div>\r\n  );\r\n};\r\n","// import { map } from 'lodash';\r\nimport React, { useEffect } from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport './../../src/css/index.css';\r\n\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { Header } from './Header';\r\nimport { OrderMonitorMenu } from './OrderMonitorMenu';\r\nimport { OrdersMonitorTables} from 'src/components/OrdersMonitorTables';\r\n// import { TopLogoPanel } from './TopLogoPanel';\r\nimport { AppStore } from 'src/logic/appStore';\r\nimport { appStore } from 'src/logic/appStore';\r\n\r\n// import { subscribeToBitfinexCurrencyPair } from 'src/logic/bitfinexRest';\r\n// import { PAIRS } from './../components/OrderMonitorMenu';\r\n// import { BitfinexOrdersTable } from './BitfinexOrdersTable';\r\n// import { KrakenOrdersTable } from 'src/components/KrakenOrdersTable';\r\n// import { BinanceOrdersTable } from 'src/components/BinanceOrdersTable';\r\n// import { BitstampOrdersTable } from 'src/components/BitstampOrdersTable';\r\n// import { BittrexOrdersTable } from './BittrexOrdersTable';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { Footer } from './Footer';\r\nimport { RightAd } from './RightAd';\r\n// import { TopAd } from './TopAd';\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-184831310-1');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1600px',\r\n    overflowX: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n}));\r\n\r\ninterface MonitorProps {\r\n  store: AppStore;\r\n}\r\n\r\nexport const OrdersMonitor = () => {\r\n    const classes = useStyles();\r\n    useEffect( () => {\r\n      // GoogleAnalytics\r\n      ReactGA.pageview(window.location.pathname + window.location.search); \r\n  });\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />          \r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\r\n          <meta name=\"theme-color\" content=\"#000000\" />\r\n          <meta name=\"application-name\" content=\"TradePump\" />\r\n          <meta name=\"description\" content=\"Tradepump is not just a Bitcoin and Cryptocurrency Free Aggregator. Come see why our servise is the best place to know crypto exchanges orders books and trades history.\" />\r\n          <meta name=\"robots\" content=\"index,follow\" />\r\n          <meta name=\"googlebot\" content=\"index,follow\" />\r\n          <meta name=\"google\" content=\"notranslate\" />\r\n          <meta name=\"generator\" content=\"ReactJS\"></meta>\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\r\n          <link rel=\"stylesheet\" href=\"style.css\" />\r\n          <title>Bitcoin & Cryptocurrency Free Aggregator | TradePump.com</title>\r\n        </Helmet>\r\n\r\n\r\n        <OrderMonitorMenu store={appStore} />       \r\n          <div className={classes.contentHolder}>\r\n            <OrdersMonitorTables store={appStore} />\r\n            <div className={classes.asideHolder}>\r\n              <RightAd />\r\n            </div>\r\n          </div>\r\n    </div>          \r\n    );\r\n  }\r\n\r\n\r\n// export const OrderMonitor = (props: any, state: any) => {\r\n//   console.log('mypops', props, state);\r\n//   return (\r\n\r\n//     <div>\r\n//       <TopLogoPanel />\r\n//       <Header />\r\n//       <button onClick={() => { }}></button>\r\n//       <OrderMonitorMenu />\r\n\r\n//     </div>\r\n//   );\r\n\r\n// };\r\n","import React from 'react';\r\nimport 'src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { RadioButtonCheckedTwoTone } from '@material-ui/icons';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1600px',\r\n    overflowX: 'auto',\r\n    fontFamily: 'sans-serif',\r\n    letterSpacing: 0,\r\n    textTransform: 'none',\r\n    fontSize: '14px',\r\n    fontWeight: 400,\r\n    marginLeft: '10px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n}));\r\n\r\nexport const Privacy = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet>\r\n          <meta charSet=\"utf-8\" />          \r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\r\n          <meta name=\"theme-color\" content=\"#000000\" />\r\n          <meta name=\"application-name\" content=\"TradePump\" />\r\n          <meta name=\"description\" content=\"Tradepump is not just a Bitcoin and Cryptocurrency Free Aggregator. Come see why our servise is the best place to know crypto exchanges orders books and trades history.\" />\r\n          <meta name=\"robots\" content=\"index,follow\" />\r\n          <meta name=\"googlebot\" content=\"index,follow\" />\r\n          <meta name=\"google\" content=\"notranslate\" />\r\n          <meta name=\"generator\" content=\"ReactJS\"></meta>\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\r\n          <link rel=\"stylesheet\" href=\"style.css\" />\r\n          <title>Bitcoin & Cryptocurrency Free Aggregator | TradePump.com</title>\r\n        </Helmet>\r\n      \r\n        <h2>Privacy Policy</h2>\r\n        <p>\r\n          <em>Last Updated: December 4, 2020</em>\r\n        </p>\r\n        <p>Your privacy is important to us. It is TradePump's policy to respect your privacy regarding any information we may collect from you across our website, <a href=\"http://tradepump.com\">tradepump.com</a>, and other sites we own and operate.</p>\r\n        <p>We only ask for personal information when we truly need it to provide a service to you. We collect it by fair and lawful means, with your knowledge and consent. We also let you know why we’re collecting it and how it will be used.</p>\r\n        <p>We only retain collected information for as long as necessary to provide you with your requested service. What data we store, we’ll protect within commercially acceptable means to prevent loss and theft, as well as unauthorized access, disclosure, copying, use or modification.</p>\r\n        <p>We don’t share any personally identifying information publicly or with third-parties, except when required to by law.</p>\r\n        <p>Our website may link to external sites that are not operated by us. Please be aware that we have no control over the content and practices of these sites, and cannot accept responsibility or liability for their respective privacy policies.</p>\r\n        <p>You are free to refuse our request for your personal information, with the understanding that we may be unable to provide you with some of your desired services.</p>\r\n        <p>Your continued use of our website will be regarded as acceptance of our practices around privacy and personal information. If you have any questions about how we handle user data and personal information, feel free to contact us.</p>\r\n        <p>This policy is effective as of 31 December 2021.</p>\r\n        <p></p>\r\n        <h3>Aggregated Statistics</h3>\r\n        <p>\r\n        <a href=\"http://tradepump.com\">tradepump.com</a> may collect statistics about the behavior of visitors to its websites. For instance, <a href=\"http://tradepump.com\">tradepump.com</a> may monitor the most popular pages on this site. \r\n        <a href=\"http://tradepump.com\">tradepump.com</a> may display this information publicly or provide it to others. \r\n        However, <a href=\"http://tradepump.com\">tradepump.com</a> does not disclose personally–identifying information other than as described below.</p>\r\n        \r\n        <p><h3>Privacy Policy Changes</h3></p>\r\n        <p>Although most changes are likely to be minor, <a href=\"http://tradepump.com\">tradepump.com</a> may change its Privacy Policy from time to time, and in <a href=\"http://tradepump.com\">tradepump.com</a>’s sole discretion. \r\n        <a href=\"http://tradepump.com\">tradepump.com</a> encourages visitors to frequently check this page for any changes to its Privacy Policy. \r\n        Your continued use of this site after any change in this Privacy Policy will constitute your acceptance of such change.</p>\r\n\r\n        <p><h3>Cookie Declaration</h3></p>\r\n        <p>\r\n        We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. \r\n        We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services.\r\n        Cookies are small text files that can be used by websites to make a user's experience more efficient.\r\n        The law states that we can store cookies on your device if they are strictly necessary for the operation of this site. \r\n        For all other types of cookies we need your permission.\r\n        This site uses different types of cookies. Some cookies are placed by third party services that appear on our pages.\r\n        You can at any time change or withdraw your consent from the Cookie Declaration on our website.</p>\r\n        \r\n\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport 'src/css/index.css';\r\n// import { ChangeEvent, useState } from 'react';\r\n// import { GridList, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\n// import { themeStyles } from '../style/postcss';\r\n// import { BorderColor } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { RadioButtonCheckedTwoTone } from '@material-ui/icons';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1600px',\r\n    overflowX: 'auto',\r\n    fontFamily: 'sans-serif',\r\n    letterSpacing: 0,\r\n    textTransform: 'none',\r\n    fontSize: '14px',\r\n    fontWeight: 400,\r\n    marginLeft: '10px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n\r\n  aboutPageLinks:{\r\n    textDecoration: 'none',\r\n    color: 'blue',\r\n  },\r\n}));\r\n\r\nexport const About = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\r\n          <meta name=\"theme-color\" content=\"#000000\" />\r\n          <meta name=\"application-name\" content=\"TradePump\" />\r\n          <meta name=\"description\" content=\"Tradepump is not just a Bitcoin and Cryptocurrency Free Aggregator. Come see why our servise is the best place to know crypto exchanges orders books and trades history.\" />\r\n          <meta name=\"robots\" content=\"index,follow\" />\r\n          <meta name=\"googlebot\" content=\"index,follow\" />\r\n          <meta name=\"google\" content=\"notranslate\" />\r\n          <meta name=\"generator\" content=\"ReactJS\"></meta>\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\r\n          <link rel=\"stylesheet\" href=\"style.css\" />\r\n          <title>Bitcoin & Cryptocurrency Free Aggregator | TradePump.com</title>\r\n        </Helmet>\r\n      \r\n        <h2>About TradePump.com</h2>\r\n        <p>\r\n          <em>Last Updated: December 4, 2020</em>\r\n        </p>\r\n        <p>This web application will help you to become a better crypto-trader and make smart decisions on buying or selling criptocurrecncy.</p>\r\n\r\n        <p><a href=\"http://tradepump.com\" className={classes.aboutPageLinks}>TradePump</a> is an Indispensable assistant in cryptocurrency trading. \r\n        Our service allows to aggregate and provide Order Books, Trades History and other analytics data from the bigest cryptocurrency exchanges:</p>\r\n        <ul>\r\n          <li><a href=\"https://kraken.com\" className={classes.aboutPageLinks}>KRAKEN</a></li>\r\n          <li><a href=\"https://bitfinex.com\" className={classes.aboutPageLinks}>BITFINEX</a></li>\r\n          <li><a href=\"https://binance.com\" className={classes.aboutPageLinks}>BINANCE</a></li>\r\n          <li><a href=\"https://bitstamp.net\" className={classes.aboutPageLinks}>BITSTAMP</a></li>\r\n          </ul>\r\n        <p>The information provided by our servise is inaccessible to other traders and gives practical benefits to our Users.</p>\r\n        <p>We are constantly developing our servise so feel free to send your proppositions to <a href=\"mailto:support@tradepump.com\" className={classes.aboutPageLinks}>Support</a>. Your experience is very important to us!</p>\r\n        <p>\r\n          By using our servise User gets an important information about large blocks and trades which exchanges do not show.\r\n\r\n        </p>\r\n        <h2>Getting real-time data</h2>\r\n        <p>TradePump uses websokets and Public APIs provided by crypto exchanges to get and aggregate real-time updates on Order Books, Trades History and other data.</p>\r\n        <h2>Orders Monitor Filters</h2>\r\n        <p>We have just a couple of filter fields available on Orders Monitor window which allow to precise the data received trom the exchanges:</p>\r\n        <p><strong>Min Order Qty</strong> - allows you to filter Orders Book for the exact cryptocurrency. Orders with Quantity more than mentioned in the field will remain in the table. </p>\r\n        <p><strong>Highlight Min Order Qty</strong> - allows you to highlight orders with Quantity equal or more than mentioned in the field.</p>\r\n        <p>If you are trading on any exchange which is mentioned above and the currency pair you are interested in is not on the Currency Pair list please write an email to <a href=\"mailto:support@tradepump.com\" className={classes.aboutPageLinks}>Support</a>. Your experience is very important to us!</p>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import IntroJs from 'intro.js';\r\n// import 'intro.js/minified/introjs.min.css';\r\n// import 'intro.js/themes/introjs-modern.css';\r\nimport 'src/css/index.css';\r\nimport 'src/css/introjs.min.css';\r\nimport 'src/css/introjs-modern.css';\r\n\r\nconst SHOW_KEY_NAME = 'intro_shown';\r\n\r\n\r\nconst steps = [\r\n  {\r\n    intro:\r\n      'Welcome to TradePump.com! <br />This is Free Bitcoin and Cryptocurrency aggregator. Our servise will help you to see the largest crypto exchanges live Orders Books with maximum depth avaialble.<br /> We are constantly developing our servise. Feel free to send your proppositions to <a href=\"mailto:support@tradepump.com\" style=\"color:rgb(240, 185, 11)\">Support</a> or just skip the tour if you are not a new visitor.',\r\n  },\r\n  {\r\n    element: '#pairfilter',\r\n    intro: 'Select the trading pair you need to know Orders Book for.',\r\n  },\r\n  {\r\n    element: '#qtyfilter',\r\n    intro: 'Set Minimum Orders Quantity to be shown.<br /> <br />This filter will allow you to see large blocks of Asks/Bids in the Orders Book',\r\n  },\r\n  {\r\n    element: '#highlightfilter',\r\n    intro: 'Set the minimum Order Quantity to be highlighted.',\r\n  },\r\n];\r\n\r\nexport const startTourAgain = () => {\r\n  localStorage.removeItem(SHOW_KEY_NAME);\r\n  if (window.location.pathname === '/monitor'){\r\n    start();\r\n  }\r\n  else {\r\n    window.location.pathname = '/monitor';\r\n  }  \r\n};\r\n\r\nexport const start = () => {\r\n  if (localStorage.getItem(SHOW_KEY_NAME)) {\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(SHOW_KEY_NAME, JSON.stringify(true));\r\n\r\n  IntroJs()\r\n    .setOptions({\r\n      steps,\r\n      // tooltipClass: 'customDefault'\r\n    })\r\n    .start();\r\n};\r\n","// import { map } from 'lodash';\r\nimport React, { useEffect } from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport 'src/css/index.css';\r\nimport { Header } from 'src/components/Header';\r\n// import { OrderMonitorMenu } from './OrderMonitorMenu';\r\nimport { TopLogoPanel } from 'src/components/TopLogoPanel';\r\n// import { AppStore } from 'src/logic/appStore';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport { Footer } from 'src/components/Footer';\r\nimport { TopAd } from 'src/components/TopAd';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Terms } from 'src/pages/Terms';\r\nimport { OrdersMonitor } from 'src/components/OrdersMonitor';\r\nimport { Privacy } from 'src/pages/Privacy';\r\nimport { About } from 'src/pages/About';\r\nimport { start } from 'src/components/intro/config';\r\nimport ReactGA from 'react-ga';\r\nimport CookieConsent from \"react-cookie-consent\";\r\nimport {Tour} from '@styled-icons/material/Tour';\r\nimport {Help} from '@styled-icons/material-twotone/Help';\r\nimport { startTourAgain } from 'src/components/intro/config';\r\n\r\n// import styled from 'styled-components';\r\n// import 'src/intro/intro.min.js';\r\n// import 'src/intro/introconfig.js';\r\n// import 'src/intro/intro.css';\r\n// import 'src/intro/intro.js';\r\n\r\n// import { Steps, Hints } from 'intro.js-react';\r\n//import Analytics from 'analytics';\r\n\r\nReactGA.initialize('UA-184831310-1');\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    minWidth: '1700px',\r\n    overflowX: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  contentHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  tableHolder: {\r\n    flexGrow: 1,\r\n  },\r\n  asideHolder: {\r\n    width: '180px',\r\n    paddingLeft: '20px',\r\n  },\r\n  topHolder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  logoHolder: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  asideTopHolder: {\r\n    paddingLeft: '20px',\r\n  },\r\n  cookiesNitification:{\r\n    color: 'rgb(240, 185, 11)',\r\n\r\n  },\r\n  introIcon: {\r\n    color: '#AECCD7',\r\n    // color: '#F4B200', //yellow\r\n    // color: 'rgb(50, 60, 70)',    \r\n        \r\n   \r\n    \r\n    position: 'fixed',\r\n    right:'20px',\r\n    bottom: '20px',\r\n    \r\n\r\n  }\r\n}));\r\n\r\nexport const Monitor = () => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n      // ReactGA.pageview(window.location.pathname + window.location.search);\r\n      start();\r\n    }, []);\r\n\r\n    return (\r\n      <BrowserRouter>\r\n      <div className={classes.root}>\r\n        <div className={classes.topHolder}>\r\n          <div className={classes.logoHolder}>\r\n            <TopLogoPanel />\r\n          </div>\r\n          <div className={classes.asideTopHolder}>\r\n            <TopAd />\r\n          </div>\r\n        </div>\r\n        <Header />\r\n        \r\n        <Switch>\r\n          <Route path='/monitor' component={OrdersMonitor} />\r\n          <Route path='/terms' component={Terms} />\r\n          <Route path='/privacy' component={Privacy} />\r\n          <Route path='/about' component={About} />\r\n          <Redirect path='/' to='/monitor' />\r\n        </Switch>\r\n        <Help className={classes.introIcon} size=\"50\" title=\"Intro Tour\" \r\n        onClick={() => {startTourAgain()}}/> \r\n          \r\n        <Footer />\r\n        <CookieConsent>We use cookies to enhance your experience, analyze our traffic, and for security and marketing. By visiting our website you agree to our use of cookies. <a data-bn-type=\"text\" target=\"_blank\" href=\"/privacy\" className={classes.cookiesNitification}>*Read more about cookies*</a></CookieConsent>\r\n       \r\n      </div>\r\n\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n// import { appStore } from './logic/appStore';\r\n\r\nimport { Monitor } from './components/Monitor';\r\n\r\n// import red from '@material-ui/core/colors/red';\r\n// eslint-disable-next-line camelcase\r\nimport { unstable_createMuiStrictModeTheme, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// import { appStoreBittrex } from './logic/appStoreBittrex';\r\n\r\nconst getThemeConstructor = (): typeof createMuiTheme => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    // eslint-disable-next-line camelcase\r\n    return unstable_createMuiStrictModeTheme;\r\n  }\r\n\r\n  return createMuiTheme;\r\n};\r\n\r\nconst themeConstructor = getThemeConstructor();\r\n\r\n// A custom theme for this app\r\nconst theme = themeConstructor({});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Monitor />\r\n  </ThemeProvider>,\r\n  document.querySelector('#root'),\r\n  \r\n\r\n);\r\n\r\n"],"sourceRoot":""}